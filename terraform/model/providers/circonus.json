{
  "name": "circonus",
  "type": "provider",
  "version": "v0.1.0-21-g52faead",
  "provider": {
    "api_url": {
      "Type": "TypeString",
      "Optional": true,
      "Description": "URL of the Circonus API",
      "Default": {},
      "Elem": {}
    },
    "auto_tag": {
      "Type": "TypeBool",
      "Optional": true,
      "Description": "Signals that the provider should automatically add a tag to all API calls denoting that the resource was created by Terraform",
      "Default": {},
      "Elem": {}
    },
    "key": {
      "Type": "TypeString",
      "Required": true,
      "Description": "API token used to authenticate with the Circonus API",
      "Default": {},
      "Elem": {}
    }
  },
  "resources": {
    "circonus_check": {
      "active": {
        "Type": "TypeBool",
        "Optional": true,
        "Description": "If the check is activate or disabled",
        "Default": {},
        "Elem": {}
      },
      "caql": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "CAQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "query": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The query definition",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "check_by_collector": {
        "Type": "TypeMap",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "check_id": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "checks": {
        "Type": "TypeList",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "cloudwatch": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "CloudWatch check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The AWS API Key",
              "Default": {
                "Type": "string"
              },
              "Elem": {}
            },
            "api_secret": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The AWS API Secret",
              "Default": {
                "Type": "string"
              },
              "Elem": {}
            },
            "dimmensions": {
              "Type": "TypeMap",
              "Required": true,
              "Description": "The dimensions to query for the metric",
              "Default": {},
              "Elem": {
                "Type": "schema.ValueType",
                "Value": "TypeString"
              }
            },
            "metric": {
              "Type": "TypeSet",
              "Required": true,
              "Description": "One or more CloudWatch Metric attributes",
              "MinItems": 1,
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "namespace": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The namespace to pull telemetry from",
              "Default": {},
              "Elem": {}
            },
            "url": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The URL including schema and hostname for the Cloudwatch monitoring server. This value will be used to specify the region - for example, to pull from us-east-1, the URL would be https://monitoring.us-east-1.amazonaws.com.",
              "Default": {},
              "Elem": {}
            },
            "version": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The version of the Cloudwatch API to use.",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "collector": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "The collector(s) that are responsible for gathering the metrics",
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The ID of the collector",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "consul": {
        "Type": "TypeList",
        "Optional": true,
        "Description": "Consul check configuration",
        "MaxItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "acl_token": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A Consul ACL token",
              "Default": {},
              "Elem": {}
            },
            "allow_stale": {
              "Type": "TypeBool",
              "Optional": true,
              "Description": "Allow Consul to read from a non-leader system",
              "Default": {},
              "Elem": {}
            },
            "ca_chain": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "certificate_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
              "Default": {},
              "Elem": {}
            },
            "check_blacklist": {
              "Type": "TypeList",
              "Optional": true,
              "Description": "A blacklist of check names to exclude from metric results",
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "ciphers": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
              "Default": {},
              "Elem": {}
            },
            "dc": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The Consul datacenter to extract health information from",
              "Default": {},
              "Elem": {}
            },
            "headers": {
              "Type": "TypeMap",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "Default": {},
              "Elem": {
                "Type": "schema.ValueType",
                "Value": "TypeString"
              }
            },
            "http_addr": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Address of a Consul agent to query",
              "Default": {},
              "Elem": {}
            },
            "key_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "node": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Node Name or NodeID of a Consul agent",
              "ConflictsWith": [
                "consul.service",
                "consul.state"
              ],
              "Default": {},
              "Elem": {}
            },
            "node_blacklist": {
              "Type": "TypeList",
              "Optional": true,
              "Description": "A blacklist of node names or IDs to exclude from metric results",
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "service": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Name of the Consul service to check",
              "ConflictsWith": [
                "consul.node",
                "consul.state"
              ],
              "Default": {},
              "Elem": {}
            },
            "service_blacklist": {
              "Type": "TypeList",
              "Optional": true,
              "Description": "A blacklist of service names to exclude from metric results",
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "state": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Check for Consul services in this particular state",
              "ConflictsWith": [
                "consul.node",
                "consul.service"
              ],
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "created": {
        "Type": "TypeInt",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "http": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "HTTP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication method",
              "Default": {},
              "Elem": {}
            },
            "auth_password": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication user password",
              "Default": {},
              "Elem": {}
            },
            "auth_user": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication user name",
              "Default": {},
              "Elem": {}
            },
            "body_regexp": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "This regular expression is matched against the body of the response. If a match is not found, the check will be marked as \"bad.",
              "Default": {},
              "Elem": {}
            },
            "ca_chain": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "certificate_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
              "Default": {},
              "Elem": {}
            },
            "ciphers": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
              "Default": {},
              "Elem": {}
            },
            "code": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP code that is expected. If the code received does not match this regular expression, the check is marked as \"bad.\"",
              "Default": {},
              "Elem": {}
            },
            "extract": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "This regular expression is matched against the body of the response globally. The first capturing match is the key and the second capturing match is the value. Each key/value extracted is registered as a metric for the check.",
              "Default": {},
              "Elem": {}
            },
            "headers": {
              "Type": "TypeMap",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "Default": {},
              "Elem": {
                "Type": "schema.ValueType",
                "Value": "TypeString"
              }
            },
            "key_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "method": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP method to use",
              "Default": {},
              "Elem": {}
            },
            "payload": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The information transferred as the payload of an HTTP request",
              "Default": {},
              "Elem": {}
            },
            "read_limit": {
              "Type": "TypeInt",
              "Optional": true,
              "Description": "Sets an approximate limit on the data read (0 means no limit)",
              "Default": {},
              "Elem": {}
            },
            "url": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The URL to use as the target of the check",
              "Default": {},
              "Elem": {}
            },
            "version": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Sets the HTTP version for the check to use",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "httptrap": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "HTTP Trap check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "async_metrics": {
              "Type": "TypeBool",
              "Optional": true,
              "Description": "Specify whether httptrap metrics are logged immediately or held until the status message is emitted",
              "Default": {},
              "Elem": {}
            },
            "secret": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "icmp_ping": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "ICMP ping check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "availability": {
              "Type": "TypeFloat",
              "Optional": true,
              "Description": "The percentage of ICMP available required for the check to be considered \"good.\"",
              "Default": {},
              "Elem": {}
            },
            "count": {
              "Type": "TypeInt",
              "Optional": true,
              "Description": "The number of ICMP requests to send during a single check.",
              "Default": {},
              "Elem": {}
            },
            "interval": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The number of milliseconds between ICMP requests.",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "json": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "JSON check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "auth_method": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication method",
              "Default": {},
              "Elem": {}
            },
            "auth_password": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication user password",
              "Default": {},
              "Elem": {}
            },
            "auth_user": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP Authentication user name",
              "Default": {},
              "Elem": {}
            },
            "ca_chain": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "certificate_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS-enabled checks)",
              "Default": {},
              "Elem": {}
            },
            "ciphers": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A list of ciphers to be used in the TLS protocol (for HTTPS checks)",
              "Default": {},
              "Elem": {}
            },
            "headers": {
              "Type": "TypeMap",
              "Optional": true,
              "Description": "Map of HTTP Headers to send along with HTTP Requests",
              "Default": {},
              "Elem": {
                "Type": "schema.ValueType",
                "Value": "TypeString"
              }
            },
            "key_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "method": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The HTTP method to use",
              "Default": {},
              "Elem": {}
            },
            "payload": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The information transferred as the payload of an HTTP request",
              "Default": {},
              "Elem": {}
            },
            "port": {
              "Type": "TypeInt",
              "Optional": true,
              "Description": "Specifies the port on which the management interface can be reached",
              "Default": {},
              "Elem": {}
            },
            "read_limit": {
              "Type": "TypeInt",
              "Optional": true,
              "Description": "Sets an approximate limit on the data read (0 means no limit)",
              "Default": {},
              "Elem": {}
            },
            "url": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The URL to use as the target of the check",
              "Default": {},
              "Elem": {}
            },
            "version": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Sets the HTTP version for the check to use",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "last_modified": {
        "Type": "TypeInt",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "last_modified_by": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "metric": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "Configuration for a stream of metrics",
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "TypeBool",
              "Optional": true,
              "Description": "Enables or disables the metric",
              "Default": {},
              "Elem": {}
            },
            "name": {
              "Type": "TypeString",
              "Required": true,
              "Description": "Name of the metric",
              "Default": {},
              "Elem": {}
            },
            "tags": {
              "Type": "TypeSet",
              "Optional": true,
              "Description": "Tags assigned to the metric",
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "type": {
              "Type": "TypeString",
              "Required": true,
              "Description": "Type of metric (e.g. numeric, histogram, text)",
              "Default": {},
              "Elem": {}
            },
            "unit": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "The unit of measurement for a metric",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "metric_limit": {
        "Type": "TypeInt",
        "Optional": true,
        "Description": "Setting a metric_limit will enable all (-1), disable (0), or allow up to the specified limit of metrics for this check (\"N+\", where N is a positive integer)",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "mysql": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "MySQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dsn": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The connect DSN for the MySQL instance",
              "Default": {},
              "Elem": {}
            },
            "query": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The SQL to use as the query",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "name": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The name of the check bundle that will be displayed in the web interface",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "notes": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "Notes about this check bundle",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "period": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The period between each time the check is made",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "postgresql": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "PostgreSQL check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dsn": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The connect DSN for the PostgreSQL instance",
              "Default": {},
              "Elem": {}
            },
            "query": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The SQL to use as the query",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "reverse_connect_urls": {
        "Type": "TypeList",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "statsd": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "statsd check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "source_ip": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The source IP of the statsd metrics stream",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "A list of tags assigned to the check",
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "target": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The target of the check (e.g. hostname, URL, IP, etc)",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "tcp": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "TCP check configuration",
        "MaxItems": 1,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "banner_regexp": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "This regular expression is matched against the response banner. If a match is not found, the check will be marked as bad.",
              "Default": {},
              "Elem": {}
            },
            "ca_chain": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing all the certificate authorities that should be loaded to validate the remote certificate (for TLS checks).",
              "Default": {},
              "Elem": {}
            },
            "certificate_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing the client certificate that will be presented to the remote server (for TLS checks).",
              "Default": {},
              "Elem": {}
            },
            "ciphers": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A list of ciphers to be used when establishing a TLS connection",
              "Default": {},
              "Elem": {}
            },
            "host": {
              "Type": "TypeString",
              "Required": true,
              "Description": "Specifies the host name or IP address to connect to for this TCP check",
              "Default": {},
              "Elem": {}
            },
            "key_file": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "A path to a file containing key to be used in conjunction with the cilent certificate (for TLS checks)",
              "Default": {},
              "Elem": {}
            },
            "port": {
              "Type": "TypeInt",
              "Required": true,
              "Description": "Specifies the port on which the management interface can be reached.",
              "Default": {},
              "Elem": {}
            },
            "tls": {
              "Type": "TypeBool",
              "Optional": true,
              "Description": "Upgrade TCP connection to use TLS.",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "timeout": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The length of time in seconds (and fractions of a second) before the check will timeout if no response is returned to the collector",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "type": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The check type",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "uuids": {
        "Type": "TypeList",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      }
    },
    "circonus_contact_group": {
      "aggregation_window": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "alert_option": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "escalate_after": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "escalate_to": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "reminder": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "severity": {
              "Type": "TypeInt",
              "Required": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "email": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "email.user"
              ],
              "Default": {},
              "Elem": {}
            },
            "user": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "email.address"
              ],
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "http": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "format": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "method": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "irc": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "user": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "last_modified": {
        "Type": "TypeInt",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "last_modified_by": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "long_message": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "long_subject": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "long_summary": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "name": {
        "Type": "TypeString",
        "Required": true,
        "Default": {},
        "Elem": {}
      },
      "pager_duty": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "contact_group_fallback": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "service_key": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "webhook_url": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "short_message": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "short_summary": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "slack": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "buttons": {
              "Type": "TypeBool",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "channel": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "contact_group_fallback": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "team": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "username": {
              "Type": "TypeString",
              "Optional": true,
              "Description": "Username Slackbot uses in Slack to deliver a notification",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "sms": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "sms.user"
              ],
              "Default": {},
              "Elem": {}
            },
            "user": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "sms.address"
              ],
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "victorops": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_key": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "contact_group_fallback": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "critical": {
              "Type": "TypeInt",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "info": {
              "Type": "TypeInt",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "team": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "warning": {
              "Type": "TypeInt",
              "Required": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "xmpp": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "xmpp.user"
              ],
              "Default": {},
              "Elem": {}
            },
            "user": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "xmpp.address"
              ],
              "Default": {},
              "Elem": {}
            }
          }
        }
      }
    },
    "circonus_graph": {
      "description": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "graph_style": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "left": {
        "Type": "TypeMap",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "schema.ValueType",
          "Value": "TypeString"
        }
      },
      "line_style": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "How the line should change between point. A string containing either 'stepped', 'interpolated' or null.",
        "Default": {},
        "Elem": {}
      },
      "metric": {
        "Type": "TypeList",
        "Optional": true,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "TypeBool",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "alpha": {
              "Type": "TypeFloat",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "axis": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "caql": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "metric.check",
                "metric.metric_name"
              ],
              "Default": {},
              "Elem": {}
            },
            "check": {
              "Type": "TypeString",
              "Optional": true,
              "ConflictsWith": [
                "metric.caql"
              ],
              "Default": {},
              "Elem": {}
            },
            "color": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "formula": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "function": {
              "Type": "TypeString",
              "Optional": true,
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "legend_formula": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "metric_name": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "metric_type": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "name": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "stack": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "metric_cluster": {
        "Type": "TypeList",
        "Optional": true,
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active": {
              "Type": "TypeBool",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "aggregate": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "axis": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "color": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            },
            "name": {
              "Type": "TypeString",
              "Required": true,
              "Default": {},
              "Elem": {}
            },
            "query": {
              "Type": "TypeString",
              "Optional": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "name": {
        "Type": "TypeString",
        "Required": true,
        "Default": {},
        "Elem": {}
      },
      "notes": {
        "Type": "TypeString",
        "Optional": true,
        "Default": {},
        "Elem": {}
      },
      "right": {
        "Type": "TypeMap",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "schema.ValueType",
          "Value": "TypeString"
        }
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      }
    },
    "circonus_metric": {
      "active": {
        "Type": "TypeBool",
        "Optional": true,
        "Description": "Enables or disables the metric",
        "Default": {},
        "Elem": {}
      },
      "name": {
        "Type": "TypeString",
        "Required": true,
        "Description": "Name of the metric",
        "Default": {},
        "Elem": {}
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "Tags assigned to the metric",
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "type": {
        "Type": "TypeString",
        "Required": true,
        "Description": "Type of metric (e.g. numeric, histogram, text)",
        "Default": {},
        "Elem": {}
      },
      "unit": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The unit of measurement for a metric",
        "Default": {},
        "Elem": {}
      }
    },
    "circonus_metric_cluster": {
      "description": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "A description of the metric cluster",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "id": {
        "Type": "TypeString",
        "Description": "The ID of this metric cluster",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "name": {
        "Type": "TypeString",
        "Required": true,
        "Description": "The name of the metric cluster",
        "Default": {},
        "Elem": {}
      },
      "query": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "A metric cluster query definition",
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "definition": {
              "Type": "TypeString",
              "Required": true,
              "Description": "A query to select a collection of metric streams",
              "Default": {},
              "Elem": {}
            },
            "type": {
              "Type": "TypeString",
              "Required": true,
              "Description": "The operation to perform on the matching metric streams",
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "A list of tags assigned to the metric cluster",
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      }
    },
    "circonus_rule_set": {
      "check": {
        "Type": "TypeString",
        "Required": true,
        "Description": "The CID of the check that contains the metric for this rule set",
        "Default": {},
        "Elem": {}
      },
      "if": {
        "Type": "TypeList",
        "Required": true,
        "Description": "A rule to execute for this rule set",
        "MinItems": 1,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "then": {
              "Type": "TypeSet",
              "Optional": true,
              "Description": "Description of the action(s) to take when this rule set is active",
              "MaxItems": 1,
              "Default": {},
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "after": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "The length of time we should wait before contacting the contact groups after this ruleset has faulted.",
                    "Default": {},
                    "Elem": {}
                  },
                  "notify": {
                    "Type": "TypeList",
                    "Optional": true,
                    "Description": "List of contact groups to notify at the following appropriate severity if this rule set is active.",
                    "MinItems": 1,
                    "Default": {},
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "TypeString"
                    }
                  },
                  "severity": {
                    "Type": "TypeInt",
                    "Optional": true,
                    "Description": "Send a notification at this severity level.",
                    "Default": {},
                    "Elem": {}
                  }
                }
              }
            },
            "value": {
              "Type": "TypeSet",
              "Optional": true,
              "Description": "Predicate that the rule set uses to evaluate a stream of metrics",
              "MaxItems": 1,
              "Default": {},
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "absent": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if there has been no data for the given metric stream over the last duration",
                    "ConflictsWith": [
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.not_contain",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "changed": {
                    "Type": "TypeBool",
                    "Optional": true,
                    "Description": "Boolean indicating the value has changed",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.not_contain",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "contains": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric contain the following string",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.not_contain",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "match": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric exactly match the following string",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.not_contain",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "max_value": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value is more than the specified value",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.not_contain"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "min_value": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the numeric value less than the specified value",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.not_contain",
                      "if.value.max_value"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "not_contain": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric does not contain the following string",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.min_value",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "not_match": {
                    "Type": "TypeString",
                    "Optional": true,
                    "Description": "Fire the rule set if the text metric not match the following string",
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.min_value",
                      "if.value.not_contain",
                      "if.value.max_value",
                      "if.value.over"
                    ],
                    "Default": {},
                    "Elem": {}
                  },
                  "over": {
                    "Type": "TypeSet",
                    "Optional": true,
                    "Description": "Use a derived value using a window",
                    "MaxItems": 1,
                    "ConflictsWith": [
                      "if.value.absent",
                      "if.value.changed",
                      "if.value.contains",
                      "if.value.match",
                      "if.value.not_match",
                      "if.value.not_contain"
                    ],
                    "Default": {},
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "last": {
                          "Type": "TypeString",
                          "Optional": true,
                          "Description": "Duration over which data from the last interval is examined",
                          "Default": {},
                          "Elem": {}
                        },
                        "using": {
                          "Type": "TypeString",
                          "Optional": true,
                          "Description": "Define the window funciton to use over the last duration",
                          "Default": {},
                          "Elem": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "link": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "URL to show users when this rule set is active (e.g. wiki)",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "metric_name": {
        "Type": "TypeString",
        "Required": true,
        "Description": "The name of the metric stream within a check to register the rule set with",
        "Default": {},
        "Elem": {}
      },
      "metric_type": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "The type of data flowing through the specified metric stream",
        "Default": {},
        "Elem": {}
      },
      "notes": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "Notes describing this rule set",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "parent": {
        "Type": "TypeString",
        "Optional": true,
        "Description": "Parent CID that must be healthy for this rule set to be active",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Description": "Tags associated with this rule set",
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      }
    }
  },
  "data-sources": {
    "circonus_account": {
      "address1": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "address2": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "cc_email": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "city": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "contact_groups": {
        "Type": "TypeList",
        "Description": "Contact Groups in this account",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "country": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "current": {
        "Type": "TypeBool",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "id"
        ],
        "Default": {},
        "Elem": {}
      },
      "description": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "id": {
        "Type": "TypeString",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "current"
        ],
        "Default": {},
        "Elem": {}
      },
      "invites": {
        "Type": "TypeList",
        "Description": "Outstanding invites attached to the account",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "email": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "role": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "name": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "owner": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "state": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "timezone": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "ui_base_url": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "usage": {
        "Type": "TypeList",
        "Description": "Account's usage limits",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "type": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "used": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "users": {
        "Type": "TypeList",
        "Description": "Users attached to this account",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "id": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "role": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      }
    },
    "circonus_collector": {
      "details": {
        "Type": "TypeList",
        "Description": "Details associated with individual collectors (a.k.a. broker)",
        "Computed": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cn": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "external_host": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "external_port": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "ip": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "min_version": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "modules": {
              "Type": "TypeList",
              "Computed": true,
              "Default": {},
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "TypeString"
              }
            },
            "port": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "skew": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "status": {
              "Type": "TypeString",
              "Computed": true,
              "Default": {},
              "Elem": {}
            },
            "version": {
              "Type": "TypeInt",
              "Computed": true,
              "Default": {},
              "Elem": {}
            }
          }
        }
      },
      "id": {
        "Type": "TypeString",
        "Optional": true,
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "latitude": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "longitude": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "name": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      },
      "tags": {
        "Type": "TypeSet",
        "Optional": true,
        "Default": {},
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "TypeString"
        }
      },
      "type": {
        "Type": "TypeString",
        "Computed": true,
        "Default": {},
        "Elem": {}
      }
    }
  }
}