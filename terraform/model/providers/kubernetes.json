{
  "name": "kubernetes",
  "type": "provider",
  "schema": {
    "client_certificate": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "PEM-encoded client certificate for TLS authentication."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "client_key": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "PEM-encoded client certificate key for TLS authentication."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "cluster_ca_certificate": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "PEM-encoded root certificates bundle for TLS authentication."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "config_context": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "config_context_auth_info": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "config_context_cluster": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "config_path": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "Path to the kube config file, defaults to ~/.kube/config"
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": "~/.kube/config"
      }
    ],
    "host": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "The hostname (in form of URI) of Kubernetes master."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "insecure": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeBool"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "Whether server should be accessed without verifying the TLS certificate."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "bool",
        "value": "false"
      }
    ],
    "password": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ],
    "username": [
      {
        "name": "Type",
        "type": "schema.ValueType",
        "value": "TypeString"
      },
      {
        "name": "Optional",
        "type": "bool",
        "value": "true"
      },
      {
        "name": "Description",
        "type": "string",
        "value": "The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint."
      },
      {
        "name": "DefaultValue_Computed",
        "type": "string",
        "value": ""
      }
    ]
  },
  "resources": {
    "kubernetes_config_map": {
      "data": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeMap"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "A map of the configuration data."
        }
      ],
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard config map's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the config map that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the config map. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the config map, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the config map must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this config map that can be used by clients to determine when config map has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this config map."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this config map. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ]
    },
    "kubernetes_horizontal_pod_autoscaler": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard horizontal pod autoscaler's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the horizontal pod autoscaler that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the horizontal pod autoscaler. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the horizontal pod autoscaler, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the horizontal pod autoscaler must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this horizontal pod autoscaler that can be used by clients to determine when horizontal pod autoscaler has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this horizontal pod autoscaler."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this horizontal pod autoscaler. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Behaviour of the autoscaler. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status."
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "max_replicas": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Upper limit for the number of pods that can be set by the autoscaler."
              }
            ],
            "min_replicas": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "1"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Lower limit for the number of pods that can be set by the autoscaler, defaults to `1`."
              }
            ],
            "scale_target_ref": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Reference to scaled resource. e.g. Replication Controller"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "api_version": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "API version of the referent"
                    }
                  ],
                  "kind": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Required",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Kind of the referent. e.g. `ReplicationController`. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                    }
                  ],
                  "name": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Required",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                    }
                  ]
                }
              }
            ],
            "target_cpu_utilization_percentage": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods. If not specified the default autoscaling policy will be used."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ]
    },
    "kubernetes_limit_range": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard limit range's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the limit range that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the limit range. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the limit range, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the limit range must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this limit range that can be used by clients to determine when limit range has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this limit range."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this limit range. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Spec defines the limits enforced. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "limit": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Limits is the list of objects that are enforced."
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "default": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Default resource requirement limit value by resource name if resource limit is omitted."
                    }
                  ],
                  "default_request": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The default resource requirement request value by resource name if resource request is omitted."
                    },
                    {
                      "name": "Computed",
                      "type": "bool",
                      "value": "true"
                    }
                  ],
                  "max": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Max usage constraints on this kind by resource name."
                    }
                  ],
                  "max_limit_request_ratio": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource."
                    }
                  ],
                  "min": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Min usage constraints on this kind by resource name."
                    }
                  ],
                  "type": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Type of resource that this limit applies to."
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "kubernetes_namespace": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard namespace's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the namespace that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the namespace. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the namespace, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this namespace that can be used by clients to determine when namespace has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this namespace."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this namespace. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ]
    },
    "kubernetes_persistent_volume": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard persistent volume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the persistent volume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the persistent volume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this persistent volume that can be used by clients to determine when persistent volume has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this persistent volume."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this persistent volume. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Spec of the persistent volume owned by the cluster"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "access_modes": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeSet"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaElements",
                "value": [
                  {
                    "name": "Type",
                    "type": "schema.ValueType",
                    "value": "TypeString"
                  }
                ]
              }
            ],
            "capacity": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity"
              },
              {
                "name": "Elem",
                "type": "interface {}",
                "value": "TypeString"
              }
            ],
            "persistent_volume_reclaim_policy": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "Retain"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy"
              }
            ],
            "persistent_volume_source": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The specification of a persistent volume."
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "aws_elastic_block_store": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                          }
                        ],
                        "partition": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeInt"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                          }
                        ],
                        "volume_id": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                          }
                        ]
                      }
                    }
                  ],
                  "azure_disk": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents an Azure Data Disk mount on the host and bind mount to the pod."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "caching_mode": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Host Caching mode: None, Read Only, Read Write."
                          }
                        ],
                        "data_disk_uri": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The URI the data disk in the blob storage"
                          }
                        ],
                        "disk_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The Name of the data disk in the blob storage"
                          }
                        ],
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Default",
                            "type": "interface {}",
                            "value": "false"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                          }
                        ]
                      }
                    }
                  ],
                  "azure_file": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents an Azure File Service mount on the host and bind mount to the pod."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                          }
                        ],
                        "secret_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The name of secret that contains Azure Storage Account Name and Key"
                          }
                        ],
                        "share_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Share Name"
                          }
                        ]
                      }
                    }
                  ],
                  "ceph_fs": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a Ceph FS mount on the host that shares a pod's lifetime"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "monitors": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeSet"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaElements",
                            "value": [
                              {
                                "name": "Type",
                                "type": "schema.ValueType",
                                "value": "TypeString"
                              }
                            ]
                          }
                        ],
                        "path": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Used as the mounted root, rather than the full Ceph tree, default is /"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                          }
                        ],
                        "secret_file": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                          }
                        ],
                        "secret_ref": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeList"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaInfo",
                            "value": {
                              "name": [
                                {
                                  "name": "Type",
                                  "type": "schema.ValueType",
                                  "value": "TypeString"
                                },
                                {
                                  "name": "Optional",
                                  "type": "bool",
                                  "value": "true"
                                },
                                {
                                  "name": "Description",
                                  "type": "string",
                                  "value": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                }
                              ]
                            }
                          }
                        ],
                        "user": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                          }
                        ]
                      }
                    }
                  ],
                  "cinder": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                          }
                        ],
                        "volume_id": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                          }
                        ]
                      }
                    }
                  ],
                  "fc": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                          }
                        ],
                        "lun": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeInt"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "FC target lun number"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                          }
                        ],
                        "target_ww_ns": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeSet"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "FC target worldwide names (WWNs)"
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaElements",
                            "value": [
                              {
                                "name": "Type",
                                "type": "schema.ValueType",
                                "value": "TypeString"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "flex_volume": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "driver": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Driver is the name of the driver to use for this volume."
                          }
                        ],
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                          }
                        ],
                        "options": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeMap"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Extra command options if any."
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                          }
                        ],
                        "secret_ref": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeList"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaInfo",
                            "value": {
                              "name": [
                                {
                                  "name": "Type",
                                  "type": "schema.ValueType",
                                  "value": "TypeString"
                                },
                                {
                                  "name": "Optional",
                                  "type": "bool",
                                  "value": "true"
                                },
                                {
                                  "name": "Description",
                                  "type": "string",
                                  "value": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "flocker": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "dataset_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                          }
                        ],
                        "dataset_uuid": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                          }
                        ]
                      }
                    }
                  ],
                  "gce_persistent_disk": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                          }
                        ],
                        "partition": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeInt"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                          }
                        ],
                        "pd_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                          }
                        ]
                      }
                    }
                  ],
                  "glusterfs": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "endpoints_name": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                          }
                        ],
                        "path": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                          }
                        ]
                      }
                    }
                  ],
                  "host_path": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "path": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                          }
                        ]
                      }
                    }
                  ],
                  "iscsi": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                          }
                        ],
                        "iqn": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Target iSCSI Qualified Name."
                          }
                        ],
                        "iscsi_interface": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Default",
                            "type": "interface {}",
                            "value": "default"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp)."
                          }
                        ],
                        "lun": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeInt"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "iSCSI target lun number."
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                          }
                        ],
                        "target_portal": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                          }
                        ]
                      }
                    }
                  ],
                  "nfs": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "path": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                          }
                        ],
                        "server": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                          }
                        ]
                      }
                    }
                  ],
                  "photon_persistent_disk": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                          }
                        ],
                        "pd_id": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "ID that identifies Photon Controller persistent disk"
                          }
                        ]
                      }
                    }
                  ],
                  "quobyte": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "group": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Group to map volume access to Default is no group"
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                          }
                        ],
                        "registry": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                          }
                        ],
                        "user": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "User to map volume access to Defaults to serivceaccount user"
                          }
                        ],
                        "volume": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Volume is a string that references an already created Quobyte volume by name."
                          }
                        ]
                      }
                    }
                  ],
                  "rbd": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "ceph_monitors": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeSet"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaElements",
                            "value": [
                              {
                                "name": "Type",
                                "type": "schema.ValueType",
                                "value": "TypeString"
                              }
                            ]
                          }
                        ],
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                          }
                        ],
                        "keyring": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          },
                          {
                            "name": "Computed",
                            "type": "bool",
                            "value": "true"
                          }
                        ],
                        "rados_user": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Default",
                            "type": "interface {}",
                            "value": "admin"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          }
                        ],
                        "rbd_image": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          }
                        ],
                        "rbd_pool": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Default",
                            "type": "interface {}",
                            "value": "rbd"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it."
                          }
                        ],
                        "read_only": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeBool"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Default",
                            "type": "interface {}",
                            "value": "false"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          }
                        ],
                        "secret_ref": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeList"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaInfo",
                            "value": {
                              "name": [
                                {
                                  "name": "Type",
                                  "type": "schema.ValueType",
                                  "value": "TypeString"
                                },
                                {
                                  "name": "Optional",
                                  "type": "bool",
                                  "value": "true"
                                },
                                {
                                  "name": "Description",
                                  "type": "string",
                                  "value": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "vsphere_volume": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Represents a vSphere volume attached and mounted on kubelets host machine"
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "fs_type": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                          }
                        ],
                        "volume_path": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Required",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "Path that identifies vSphere volume vmdk"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "kubernetes_persistent_volume_claim": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard persistent volume claim's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the persistent volume claim that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume claim. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the persistent volume claim, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the persistent volume claim must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this persistent volume claim that can be used by clients to determine when persistent volume claim has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this persistent volume claim."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this persistent volume claim. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "access_modes": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeSet"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaElements",
                "value": [
                  {
                    "name": "Type",
                    "type": "schema.ValueType",
                    "value": "TypeString"
                  }
                ]
              }
            ],
            "resources": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "limits": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                    }
                  ],
                  "requests": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                    }
                  ]
                }
              }
            ],
            "selector": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A label query over volumes to consider for binding."
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "match_expressions": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeList"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "A list of label selector requirements. The requirements are ANDed."
                    },
                    {
                      "name": "Elem",
                      "type": "ResourceSchemaInfo",
                      "value": {
                        "key": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "The label key that the selector applies to."
                          }
                        ],
                        "operator": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeString"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                          }
                        ],
                        "values": [
                          {
                            "name": "Type",
                            "type": "schema.ValueType",
                            "value": "TypeSet"
                          },
                          {
                            "name": "Optional",
                            "type": "bool",
                            "value": "true"
                          },
                          {
                            "name": "Description",
                            "type": "string",
                            "value": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch."
                          },
                          {
                            "name": "Elem",
                            "type": "ResourceSchemaElements",
                            "value": [
                              {
                                "name": "Type",
                                "type": "schema.ValueType",
                                "value": "TypeString"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "match_labels": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeMap"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                    }
                  ]
                }
              }
            ],
            "volume_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The binding reference to the PersistentVolume backing this claim."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "wait_until_bound": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeBool"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Default",
          "type": "interface {}",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Whether to wait for the claim to reach `Bound` state (to find volume in which to claim the space)"
        }
      ]
    },
    "kubernetes_resource_quota": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard resource quota's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the resource quota that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the resource quota. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the resource quota, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the resource quota must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this resource quota that can be used by clients to determine when resource quota has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this resource quota."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this resource quota. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Spec defines the desired quota. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "hard": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The set of desired hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota"
              },
              {
                "name": "Elem",
                "type": "interface {}",
                "value": "TypeString"
              }
            ],
            "scopes": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeSet"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects."
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaElements",
                "value": [
                  {
                    "name": "Type",
                    "type": "schema.ValueType",
                    "value": "TypeString"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "kubernetes_secret": {
      "data": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeMap"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "A map of the secret data."
        }
      ],
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard secret's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the secret, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the secret must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this secret that can be used by clients to determine when secret has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this secret."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this secret. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "type": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeString"
        },
        {
          "name": "Optional",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Default",
          "type": "interface {}",
          "value": "Opaque"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Type of secret"
        }
      ]
    },
    "kubernetes_service": {
      "metadata": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Standard service's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "annotations": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations"
              }
            ],
            "generate_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency"
              }
            ],
            "generation": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeInt"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A sequence number representing a specific generation of the desired state."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "labels": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
              }
            ],
            "name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "namespace": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "default"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Namespace defines the space within which name of the service must be unique."
              }
            ],
            "resource_version": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "self_link": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A URL representing this service."
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "uid": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ]
          }
        }
      ],
      "spec": [
        {
          "name": "Type",
          "type": "schema.ValueType",
          "value": "TypeList"
        },
        {
          "name": "Required",
          "type": "bool",
          "value": "true"
        },
        {
          "name": "Description",
          "type": "string",
          "value": "Spec defines the behavior of a service. http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status"
        },
        {
          "name": "Elem",
          "type": "ResourceSchemaInfo",
          "value": {
            "cluster_ip": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The IP address of the service. It is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. `None` can be specified for headless services when proxying is not required. Ignored if type is `ExternalName`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
              },
              {
                "name": "Computed",
                "type": "bool",
                "value": "true"
              }
            ],
            "external_ips": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeSet"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system."
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaElements",
                "value": [
                  {
                    "name": "Type",
                    "type": "schema.ValueType",
                    "value": "TypeString"
                  }
                ]
              }
            ],
            "external_name": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires `type` to be `ExternalName`."
              }
            ],
            "load_balancer_ip": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Only applies to `type = LoadBalancer`. LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying this field when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature."
              }
            ],
            "load_balancer_source_ranges": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeSet"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature. More info: http://kubernetes.io/docs/user-guide/services-firewalls"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaElements",
                "value": [
                  {
                    "name": "Type",
                    "type": "schema.ValueType",
                    "value": "TypeString"
                  }
                ]
              }
            ],
            "port": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeList"
              },
              {
                "name": "Required",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
              },
              {
                "name": "Elem",
                "type": "ResourceSchemaInfo",
                "value": {
                  "name": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The name of this port within the service. All ports within the service must have unique names. Optional if only one ServicePort is defined on this service."
                    }
                  ],
                  "node_port": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeInt"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The port on each node on which this service is exposed when `type` is `NodePort` or `LoadBalancer`. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the `type` of this service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport"
                    },
                    {
                      "name": "Computed",
                      "type": "bool",
                      "value": "true"
                    }
                  ],
                  "port": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeInt"
                    },
                    {
                      "name": "Required",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The port that will be exposed by this service."
                    }
                  ],
                  "protocol": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeString"
                    },
                    {
                      "name": "Optional",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Default",
                      "type": "interface {}",
                      "value": "TCP"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`."
                    }
                  ],
                  "target_port": [
                    {
                      "name": "Type",
                      "type": "schema.ValueType",
                      "value": "TypeInt"
                    },
                    {
                      "name": "Required",
                      "type": "bool",
                      "value": "true"
                    },
                    {
                      "name": "Description",
                      "type": "string",
                      "value": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. This field is ignored for services with `cluster_ip = \"None\"`. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service"
                    }
                  ]
                }
              }
            ],
            "selector": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeMap"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Route service traffic to pods with label keys and values matching this selector. Only applies to types `ClusterIP`, `NodePort`, and `LoadBalancer`. More info: http://kubernetes.io/docs/user-guide/services#overview"
              }
            ],
            "session_affinity": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "None"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Used to maintain session affinity. Supports `ClientIP` and `None`. Defaults to `None`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies"
              }
            ],
            "type": [
              {
                "name": "Type",
                "type": "schema.ValueType",
                "value": "TypeString"
              },
              {
                "name": "Optional",
                "type": "bool",
                "value": "true"
              },
              {
                "name": "Default",
                "type": "interface {}",
                "value": "ClusterIP"
              },
              {
                "name": "Description",
                "type": "string",
                "value": "Determines how the service is exposed. Defaults to `ClusterIP`. Valid options are `ExternalName`, `ClusterIP`, `NodePort`, and `LoadBalancer`. `ExternalName` maps to the specified `external_name`. More info: http://kubernetes.io/docs/user-guide/services#overview"
              }
            ]
          }
        }
      ]
    }
  },
  "data-sources": {}
}
