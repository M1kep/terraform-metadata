{
  ".schema_version": "1",
  "name": "kubernetes",
  "type": "provider",
  "version": "v1.6.2",
  "provider": {
    "client_certificate": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded client certificate for TLS authentication.",
      "DefaultFunc": "ENV(KUBE_CLIENT_CERT_DATA)"
    },
    "client_key": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded client certificate key for TLS authentication.",
      "DefaultFunc": "ENV(KUBE_CLIENT_KEY_DATA)"
    },
    "cluster_ca_certificate": {
      "Type": "String",
      "Optional": true,
      "Description": "PEM-encoded root certificates bundle for TLS authentication.",
      "DefaultFunc": "ENV(KUBE_CLUSTER_CA_CERT_DATA)"
    },
    "config_context": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(KUBE_CTX)"
    },
    "config_context_auth_info": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(KUBE_CTX_AUTH_INFO)"
    },
    "config_context_cluster": {
      "Type": "String",
      "Optional": true,
      "DefaultFunc": "ENV(KUBE_CTX_CLUSTER)"
    },
    "config_path": {
      "Type": "String",
      "Optional": true,
      "Description": "Path to the kube config file, defaults to ~/.kube/config",
      "DefaultFunc": "MENV(KUBE_CONFIG,KUBECONFIG)"
    },
    "host": {
      "Type": "String",
      "Optional": true,
      "Description": "The hostname (in form of URI) of Kubernetes master.",
      "DefaultFunc": "ENV(KUBE_HOST)"
    },
    "insecure": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Whether server should be accessed without verifying the TLS certificate.",
      "DefaultFunc": "ENV(KUBE_INSECURE)"
    },
    "load_config_file": {
      "Type": "Bool",
      "Optional": true,
      "Description": "Load local kubeconfig.",
      "DefaultFunc": "ENV(KUBE_LOAD_CONFIG_FILE)"
    },
    "password": {
      "Type": "String",
      "Optional": true,
      "Description": "The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
      "DefaultFunc": "ENV(KUBE_PASSWORD)"
    },
    "token": {
      "Type": "String",
      "Optional": true,
      "Description": "Token to authenticate an service account",
      "DefaultFunc": "ENV(KUBE_TOKEN)"
    },
    "username": {
      "Type": "String",
      "Optional": true,
      "Description": "The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
      "DefaultFunc": "ENV(KUBE_USER)"
    }
  },
  "resources": {
    "kubernetes_cluster_role": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard clusterRole's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the clusterRole that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the clusterRole. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the clusterRole, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this clusterRole that can be used by clients to determine when clusterRole has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this clusterRole.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this clusterRole. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "rule": {
        "Type": "List",
        "Required": true,
        "Description": "List of PolicyRules for this ClusterRole",
        "MinItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_groups": {
              "Type": "List",
              "Optional": true,
              "Description": "APIGroups is the name of the APIGroup that contains the resources. If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "non_resource_urls": {
              "Type": "List",
              "Optional": true,
              "Description": "NonResourceURLs is a set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"), but not both.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "resource_names": {
              "Type": "List",
              "Optional": true,
              "Description": "ResourceNames is an optional white list of names that the rule applies to. An empty set means that everything is allowed.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "resources": {
              "Type": "List",
              "Optional": true,
              "Description": "Resources is a list of resources this rule applies to. ResourceAll represents all resources.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "verbs": {
              "Type": "List",
              "Required": true,
              "Description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule. VerbAll represents all kinds.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "kubernetes_cluster_role_binding": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard clusterRoleBinding's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the clusterRoleBinding that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the clusterRoleBinding. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the clusterRoleBinding, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this clusterRoleBinding that can be used by clients to determine when clusterRoleBinding has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this clusterRoleBinding.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this clusterRoleBinding. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "role_ref": {
        "Type": "List",
        "Required": true,
        "Description": "RoleRef references the Cluster Role for this binding",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_group": {
              "Type": "String",
              "Required": true,
              "Description": "The API group of the user. The only value possible at the moment is `rbac.authorization.k8s.io`."
            },
            "kind": {
              "Type": "String",
              "Required": true,
              "Description": "The kind of resource."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the User to bind to."
            }
          }
        }
      },
      "subject": {
        "Type": "List",
        "Required": true,
        "Description": "Subjects defines the entities to bind a ClusterRole to.",
        "MinItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_group": {
              "Type": "String",
              "Optional": true,
              "Description": "The API group of the subject resource.",
              "Computed": true
            },
            "kind": {
              "Type": "String",
              "Required": true,
              "Description": "The kind of resource."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the resource to bind to."
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "The Namespace of the subject resource.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            }
          }
        }
      }
    },
    "kubernetes_config_map": {
      "data": {
        "Type": "Map",
        "Optional": true,
        "Description": "A map of the configuration data."
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard config map's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the config map that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the config map. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the config map, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the config map must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this config map that can be used by clients to determine when config map has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this config map.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this config map. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      }
    },
    "kubernetes_daemonset": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard daemonset's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the daemonset that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the daemonset. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the daemonset, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the daemonset must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this daemonset that can be used by clients to determine when daemonset has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this daemonset.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this daemonset. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the specification of the desired behavior of the daemonset. More info: https://v1-9.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#daemonset-v1-apps",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "min_ready_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "revision_history_limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
              "Default": {
                "Type": "int",
                "Value": "10"
              }
            },
            "selector": {
              "Type": "List",
              "Optional": true,
              "Description": "A label query over pods that are managed by the DaemonSet.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_expressions": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of label selector requirements. The requirements are ANDed.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The label key that the selector applies to."
                        },
                        "operator": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                        },
                        "values": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "match_labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }
                }
              }
            },
            "strategy": {
              "Type": "List",
              "Optional": true,
              "Description": "The deployment strategy used to replace existing pods with new ones.",
              "Computed": true,
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "rolling_update": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Rolling update config params. Present only if type = 'RollingUpdate'.",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "max_unavailable": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of deployment. Can be 'RollingUpdate' or 'OnDelete'. Default is RollingUpdate.",
                    "Default": {
                      "Type": "string",
                      "Value": "RollingUpdate"
                    }
                  }
                }
              }
            },
            "template": {
              "Type": "List",
              "Required": true,
              "Description": "An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#pod-template",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "metadata": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Standard daemon set's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "annotations": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "An unstructured key value map stored with the daemon set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "generate_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
                          "ConflictsWith": [
                            "metadata.0.name"
                          ]
                        },
                        "generation": {
                          "Type": "Int",
                          "Description": "A sequence number representing a specific generation of the desired state.",
                          "Computed": true
                        },
                        "labels": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the daemon set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the daemon set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                          "Computed": true,
                          "ConflictsWith": [
                            "metadata.0.generate_name"
                          ]
                        },
                        "resource_version": {
                          "Type": "String",
                          "Description": "An opaque value that represents the internal version of this daemon set that can be used by clients to determine when daemon set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                          "Computed": true
                        },
                        "self_link": {
                          "Type": "String",
                          "Description": "A URL representing this daemon set.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "The unique in time and space value for this daemon set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "spec": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Spec of the pods owned by the daemon set",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "active_deadline_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
                        },
                        "container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "dns_config": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "nameservers": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "option": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the option."
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Value of the option. Optional: Defaults to empty."
                                    }
                                  }
                                }
                              },
                              "searches": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "dns_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                          "Default": {
                            "Type": "string",
                            "Value": "ClusterFirst"
                          }
                        },
                        "host_aliases": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "hostnames": {
                                "Type": "List",
                                "Required": true,
                                "Description": "Hostnames for the IP address.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "ip": {
                                "Type": "String",
                                "Required": true,
                                "Description": "IP address of the host file entry."
                              }
                            }
                          }
                        },
                        "host_ipc": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_network": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_pid": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's pid namespace.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                          "Computed": true
                        },
                        "image_pull_secrets": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "init_container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "node_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                          "Computed": true
                        },
                        "node_selector": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection."
                        },
                        "restart_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                          "Default": {
                            "Type": "string",
                            "Value": "Always"
                          }
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_group": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              },
                              "supplemental_groups": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "Int"
                                }
                              }
                            }
                          }
                        },
                        "service_account_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                          "Computed": true
                        },
                        "subdomain": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all.."
                        },
                        "termination_grace_period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                          "Default": {
                            "Type": "int",
                            "Value": "30"
                          }
                        },
                        "volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "aws_elastic_block_store": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    }
                                  }
                                }
                              },
                              "azure_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "caching_mode": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Host Caching mode: None, Read Only, Read Write."
                                    },
                                    "data_disk_uri": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The URI the data disk in the blob storage"
                                    },
                                    "disk_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Name of the data disk in the blob storage"
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "azure_file": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The name of secret that contains Azure Storage Account Name and Key"
                                    },
                                    "share_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Share Name"
                                    }
                                  }
                                }
                              },
                              "ceph_fs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_file": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    }
                                  }
                                }
                              },
                              "cinder": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    }
                                  }
                                }
                              },
                              "config_map": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "ConfigMap represents a configMap that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "downward_api": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "field_ref": {
                                            "Type": "List",
                                            "Required": true,
                                            "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Required": true
                                                },
                                                "quantity": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "empty_dir": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "medium": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                      "Default": {
                                        "Type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fc": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "FC target lun number"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "target_ww_ns": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "FC target worldwide names (WWNs)",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "flex_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "driver": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Driver is the name of the driver to use for this volume."
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                    },
                                    "options": {
                                      "Type": "Map",
                                      "Optional": true,
                                      "Description": "Extra command options if any."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "flocker": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "dataset_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                                    },
                                    "dataset_uuid": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                                    }
                                  }
                                }
                              },
                              "gce_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "pd_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    }
                                  }
                                }
                              },
                              "git_repo": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "GitRepo represents a git repository at a particular revision.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "directory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                                    },
                                    "repository": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Repository URL"
                                    },
                                    "revision": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Commit hash for the specified revision."
                                    }
                                  }
                                }
                              },
                              "glusterfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "endpoints_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    }
                                  }
                                }
                              },
                              "host_path": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                                    }
                                  }
                                }
                              },
                              "iscsi": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                                    },
                                    "iqn": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Target iSCSI Qualified Name."
                                    },
                                    "iscsi_interface": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "default"
                                      }
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "iSCSI target lun number."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                                    },
                                    "target_portal": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                    }
                                  }
                                }
                              },
                              "local": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "nfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "server": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    }
                                  }
                                }
                              },
                              "persistent_volume_claim": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The specification of a persistent volume.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "claim_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Will force the ReadOnly setting in VolumeMounts.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "photon_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "pd_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "ID that identifies Photon Controller persistent disk"
                                    }
                                  }
                                }
                              },
                              "quobyte": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "group": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Group to map volume access to Default is no group"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                                    },
                                    "registry": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User to map volume access to Defaults to serivceaccount user"
                                    },
                                    "volume": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume is a string that references an already created Quobyte volume by name."
                                    }
                                  }
                                }
                              },
                              "rbd": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "ceph_monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                                    },
                                    "keyring": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Computed": true
                                    },
                                    "rados_user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "admin"
                                      }
                                    },
                                    "rbd_image": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                                    },
                                    "rbd_pool": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "rbd"
                                      }
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "secret": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                                    }
                                  }
                                }
                              },
                              "vsphere_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "volume_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that identifies vSphere volume vmdk"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_deployment": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard deployment's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the deployment that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the deployment. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the deployment, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the deployment must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this deployment that can be used by clients to determine when deployment has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this deployment.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this deployment. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the specification of the desired behavior of the deployment. More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#deployment-v1-apps",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "min_ready_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "paused": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Indicates that the deployment is paused.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "progress_deadline_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
              "Default": {
                "Type": "int",
                "Value": "600"
              }
            },
            "replicas": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of desired replicas. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "revision_history_limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
              "Default": {
                "Type": "int",
                "Value": "10"
              }
            },
            "selector": {
              "Type": "List",
              "Optional": true,
              "Description": "A label query over pods that should match the Replicas count.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_expressions": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of label selector requirements. The requirements are ANDed.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The label key that the selector applies to."
                        },
                        "operator": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                        },
                        "values": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "match_labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }
                }
              }
            },
            "strategy": {
              "Type": "List",
              "Optional": true,
              "Description": "The deployment strategy to use to replace existing pods with new ones.",
              "Computed": true,
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "rolling_update": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "max_surge": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.",
                          "Default": {
                            "Type": "string",
                            "Value": "25%"
                          }
                        },
                        "max_unavailable": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
                          "Default": {
                            "Type": "string",
                            "Value": "25%"
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of deployment. Can be 'Recreate' or 'RollingUpdate'. Default is RollingUpdate.",
                    "Default": {
                      "Type": "string",
                      "Value": "RollingUpdate"
                    }
                  }
                }
              }
            },
            "template": {
              "Type": "List",
              "Required": true,
              "Description": "Template describes the pods that will be created.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "metadata": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Standard pod's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "annotations": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "An unstructured key value map stored with the pod that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "generate_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
                          "ConflictsWith": [
                            "metadata.name"
                          ]
                        },
                        "generation": {
                          "Type": "Int",
                          "Description": "A sequence number representing a specific generation of the desired state.",
                          "Computed": true
                        },
                        "labels": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the pod. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the pod, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                          "Computed": true,
                          "ConflictsWith": [
                            "metadata.generate_name"
                          ]
                        },
                        "namespace": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Namespace defines the space within which name of the pod must be unique.",
                          "Default": {
                            "Type": "string",
                            "Value": "default"
                          }
                        },
                        "resource_version": {
                          "Type": "String",
                          "Description": "An opaque value that represents the internal version of this pod that can be used by clients to determine when pod has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                          "Computed": true
                        },
                        "self_link": {
                          "Type": "String",
                          "Description": "A URL representing this pod.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "The unique in time and space value for this pod. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "spec": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Spec defines the specification of the desired behavior of the deployment. More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#deployment-v1-apps",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "active_deadline_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
                        },
                        "container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "dns_config": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "nameservers": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "option": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the option."
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Value of the option. Optional: Defaults to empty."
                                    }
                                  }
                                }
                              },
                              "searches": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "dns_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                          "Default": {
                            "Type": "string",
                            "Value": "ClusterFirst"
                          }
                        },
                        "host_aliases": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "hostnames": {
                                "Type": "List",
                                "Required": true,
                                "Description": "Hostnames for the IP address.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "ip": {
                                "Type": "String",
                                "Required": true,
                                "Description": "IP address of the host file entry."
                              }
                            }
                          }
                        },
                        "host_ipc": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_network": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_pid": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's pid namespace.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                          "Computed": true
                        },
                        "image_pull_secrets": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "init_container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "node_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                          "Computed": true
                        },
                        "node_selector": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection."
                        },
                        "restart_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                          "Default": {
                            "Type": "string",
                            "Value": "Always"
                          }
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_group": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              },
                              "supplemental_groups": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "Int"
                                }
                              }
                            }
                          }
                        },
                        "service_account_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                          "Computed": true
                        },
                        "subdomain": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all.."
                        },
                        "termination_grace_period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                          "Default": {
                            "Type": "int",
                            "Value": "30"
                          }
                        },
                        "volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "aws_elastic_block_store": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    }
                                  }
                                }
                              },
                              "azure_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "caching_mode": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Host Caching mode: None, Read Only, Read Write."
                                    },
                                    "data_disk_uri": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The URI the data disk in the blob storage"
                                    },
                                    "disk_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Name of the data disk in the blob storage"
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "azure_file": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The name of secret that contains Azure Storage Account Name and Key"
                                    },
                                    "share_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Share Name"
                                    }
                                  }
                                }
                              },
                              "ceph_fs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_file": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    }
                                  }
                                }
                              },
                              "cinder": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    }
                                  }
                                }
                              },
                              "config_map": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "ConfigMap represents a configMap that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "downward_api": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "field_ref": {
                                            "Type": "List",
                                            "Required": true,
                                            "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Required": true
                                                },
                                                "quantity": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "empty_dir": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "medium": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                      "Default": {
                                        "Type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fc": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "FC target lun number"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "target_ww_ns": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "FC target worldwide names (WWNs)",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "flex_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "driver": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Driver is the name of the driver to use for this volume."
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                    },
                                    "options": {
                                      "Type": "Map",
                                      "Optional": true,
                                      "Description": "Extra command options if any."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "flocker": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "dataset_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                                    },
                                    "dataset_uuid": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                                    }
                                  }
                                }
                              },
                              "gce_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "pd_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    }
                                  }
                                }
                              },
                              "git_repo": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "GitRepo represents a git repository at a particular revision.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "directory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                                    },
                                    "repository": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Repository URL"
                                    },
                                    "revision": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Commit hash for the specified revision."
                                    }
                                  }
                                }
                              },
                              "glusterfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "endpoints_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    }
                                  }
                                }
                              },
                              "host_path": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                                    }
                                  }
                                }
                              },
                              "iscsi": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                                    },
                                    "iqn": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Target iSCSI Qualified Name."
                                    },
                                    "iscsi_interface": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "default"
                                      }
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "iSCSI target lun number."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                                    },
                                    "target_portal": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                    }
                                  }
                                }
                              },
                              "local": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "nfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "server": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    }
                                  }
                                }
                              },
                              "persistent_volume_claim": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The specification of a persistent volume.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "claim_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Will force the ReadOnly setting in VolumeMounts.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "photon_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "pd_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "ID that identifies Photon Controller persistent disk"
                                    }
                                  }
                                }
                              },
                              "quobyte": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "group": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Group to map volume access to Default is no group"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                                    },
                                    "registry": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User to map volume access to Defaults to serivceaccount user"
                                    },
                                    "volume": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume is a string that references an already created Quobyte volume by name."
                                    }
                                  }
                                }
                              },
                              "rbd": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "ceph_monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                                    },
                                    "keyring": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Computed": true
                                    },
                                    "rados_user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "admin"
                                      }
                                    },
                                    "rbd_image": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                                    },
                                    "rbd_pool": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "rbd"
                                      }
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "secret": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                                    }
                                  }
                                }
                              },
                              "vsphere_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "volume_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that identifies vSphere volume vmdk"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_endpoints": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard endpoints's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the endpoints that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the endpoints. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the endpoints, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the endpoints must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this endpoints that can be used by clients to determine when endpoints has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this endpoints.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this endpoints. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "subset": {
        "Type": "List",
        "Optional": true,
        "Description": "Set of addresses and ports that comprise a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#services-without-selectors",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "address": {
              "Type": "List",
              "Optional": true,
              "Description": "IP address which offers the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.",
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "hostname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The Hostname of this endpoint."
                  },
                  "ip": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24)."
                  },
                  "node_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Node hosting this endpoint. This can be used to determine endpoints local to a node."
                  }
                }
              }
            },
            "not_ready_address": {
              "Type": "List",
              "Optional": true,
              "Description": "IP address which offers the related ports but is not currently marked as ready because it have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "hostname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The Hostname of this endpoint."
                  },
                  "ip": {
                    "Type": "String",
                    "Required": true,
                    "Description": "The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24)."
                  },
                  "node_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Node hosting this endpoint. This can be used to determine endpoints local to a node."
                  }
                }
              }
            },
            "port": {
              "Type": "List",
              "Optional": true,
              "Description": "Port number available on the related IP addresses.",
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of this port within the endpoint. Must be a DNS_LABEL. Optional if only one Port is defined on this endpoint."
                  },
                  "port": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The port that will be exposed by this endpoint."
                  },
                  "protocol": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.",
                    "Default": {
                      "Type": "string",
                      "Value": "TCP"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_horizontal_pod_autoscaler": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard horizontal pod autoscaler's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the horizontal pod autoscaler that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the horizontal pod autoscaler. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the horizontal pod autoscaler, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the horizontal pod autoscaler must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this horizontal pod autoscaler that can be used by clients to determine when horizontal pod autoscaler has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this horizontal pod autoscaler.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this horizontal pod autoscaler. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Behaviour of the autoscaler. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "max_replicas": {
              "Type": "Int",
              "Required": true,
              "Description": "Upper limit for the number of pods that can be set by the autoscaler."
            },
            "min_replicas": {
              "Type": "Int",
              "Optional": true,
              "Description": "Lower limit for the number of pods that can be set by the autoscaler, defaults to `1`.",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "scale_target_ref": {
              "Type": "List",
              "Required": true,
              "Description": "Reference to scaled resource. e.g. Replication Controller",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "api_version": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "API version of the referent"
                  },
                  "kind": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Kind of the referent. e.g. `ReplicationController`. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  }
                }
              }
            },
            "target_cpu_utilization_percentage": {
              "Type": "Int",
              "Optional": true,
              "Description": "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods. If not specified the default autoscaling policy will be used.",
              "Computed": true
            }
          }
        }
      }
    },
    "kubernetes_limit_range": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard limit range's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the limit range that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the limit range. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the limit range, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the limit range must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this limit range that can be used by clients to determine when limit range has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this limit range.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this limit range. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Optional": true,
        "Description": "Spec defines the limits enforced. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "limit": {
              "Type": "List",
              "Optional": true,
              "Description": "Limits is the list of objects that are enforced.",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "default": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "Default resource requirement limit value by resource name if resource limit is omitted."
                  },
                  "default_request": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "The default resource requirement request value by resource name if resource request is omitted.",
                    "Computed": true
                  },
                  "max": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "Max usage constraints on this kind by resource name."
                  },
                  "max_limit_request_ratio": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "The named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource."
                  },
                  "min": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "Min usage constraints on this kind by resource name."
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Type of resource that this limit applies to."
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_namespace": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard namespace's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the namespace that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.0.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the namespace. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the namespace, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.0.generate_name"
              ]
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this namespace that can be used by clients to determine when namespace has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this namespace.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this namespace. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      }
    },
    "kubernetes_network_policy": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard network policy's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the network policy that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the network policy. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the network policy, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the network policy must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this network policy that can be used by clients to determine when network policy has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this network policy.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this network policy. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Specification of the desired behavior for this NetworkPolicy.",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "egress": {
              "Type": "List",
              "Optional": true,
              "Description": "List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "ports": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "port": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers."
                        },
                        "protocol": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
                          "Default": {
                            "Type": "string",
                            "Value": "TCP"
                          }
                        }
                      }
                    }
                  },
                  "to": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "ip_block": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cidr": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
                              },
                              "except": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "namespace_selector": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of label selector requirements. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }
                            }
                          }
                        },
                        "pod_selector": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of label selector requirements. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "ingress": {
              "Type": "List",
              "Optional": true,
              "Description": "List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "from": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "ip_block": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cidr": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\""
                              },
                              "except": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "namespace_selector": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of label selector requirements. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }
                            }
                          }
                        },
                        "pod_selector": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of label selector requirements. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ports": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "port": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers."
                        },
                        "protocol": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
                          "Default": {
                            "Type": "string",
                            "Value": "TCP"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "pod_selector": {
              "Type": "List",
              "Required": true,
              "Description": "Selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_expressions": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of label selector requirements. The requirements are ANDed.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The label key that the selector applies to."
                        },
                        "operator": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                        },
                        "values": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "match_labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }
                }
              }
            },
            "policy_types": {
              "Type": "List",
              "Required": true,
              "Description": "List of rule types that the NetworkPolicy relates to. Valid options are Ingress, Egress, or Ingress,Egress. If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an Egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
              "MaxItems": 2,
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "kubernetes_persistent_volume": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard persistent volume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the persistent volume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the persistent volume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this persistent volume that can be used by clients to determine when persistent volume has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this persistent volume.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this persistent volume. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec of the persistent volume owned by the cluster",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_modes": {
              "Type": "Set",
              "Required": true,
              "Description": "Contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "capacity": {
              "Type": "Map",
              "Required": true,
              "Description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity",
              "Elem": {
                "Value": "String"
              }
            },
            "node_affinity": {
              "Type": "List",
              "Optional": true,
              "Description": "A description of the persistent volume's node affinity. More info: https://kubernetes.io/docs/concepts/storage/volumes/#local",
              "Computed": true,
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "required": {
                    "Type": "List",
                    "Optional": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "node_selector_term": {
                          "Type": "List",
                          "Required": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of node selector requirements by node's labels. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists`, `DoesNotExist`, `Gt`, and `Lt`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_fields": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of node selector requirements by node's fields. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists`, `DoesNotExist`, `Gt`, and `Lt`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "persistent_volume_reclaim_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy",
              "Default": {
                "Type": "string",
                "Value": "Retain"
              }
            },
            "persistent_volume_source": {
              "Type": "List",
              "Required": true,
              "Description": "The specification of a persistent volume.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "aws_elastic_block_store": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        },
                        "partition": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        },
                        "volume_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        }
                      }
                    }
                  },
                  "azure_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "caching_mode": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Host Caching mode: None, Read Only, Read Write."
                        },
                        "data_disk_uri": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The URI the data disk in the blob storage"
                        },
                        "disk_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The Name of the data disk in the blob storage"
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        }
                      }
                    }
                  },
                  "azure_file": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "secret_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The name of secret that contains Azure Storage Account Name and Key"
                        },
                        "share_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Share Name"
                        }
                      }
                    }
                  },
                  "ceph_fs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "monitors": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        },
                        "secret_file": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        }
                      }
                    }
                  },
                  "cinder": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        },
                        "volume_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        }
                      }
                    }
                  },
                  "fc": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "lun": {
                          "Type": "Int",
                          "Required": true,
                          "Description": "FC target lun number"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "target_ww_ns": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "FC target worldwide names (WWNs)",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "flex_volume": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "driver": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Driver is the name of the driver to use for this volume."
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                        },
                        "options": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Extra command options if any."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "flocker": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "dataset_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                        },
                        "dataset_uuid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                        }
                      }
                    }
                  },
                  "gce_persistent_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "partition": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "pd_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        }
                      }
                    }
                  },
                  "glusterfs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "endpoints_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        },
                        "path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        }
                      }
                    }
                  },
                  "host_path": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                        }
                      }
                    }
                  },
                  "iscsi": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                        },
                        "iqn": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Target iSCSI Qualified Name."
                        },
                        "iscsi_interface": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                          "Default": {
                            "Type": "string",
                            "Value": "default"
                          }
                        },
                        "lun": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "iSCSI target lun number."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                        },
                        "target_portal": {
                          "Type": "String",
                          "Required": true,
                          "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                        }
                      }
                    }
                  },
                  "local": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                        }
                      }
                    }
                  },
                  "nfs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        },
                        "server": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        }
                      }
                    }
                  },
                  "photon_persistent_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "pd_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID that identifies Photon Controller persistent disk"
                        }
                      }
                    }
                  },
                  "quobyte": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "group": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Group to map volume access to Default is no group"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                        },
                        "registry": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                        },
                        "user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "User to map volume access to Defaults to serivceaccount user"
                        },
                        "volume": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Volume is a string that references an already created Quobyte volume by name."
                        }
                      }
                    }
                  },
                  "rbd": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "ceph_monitors": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                        },
                        "keyring": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Computed": true
                        },
                        "rados_user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Default": {
                            "Type": "string",
                            "Value": "admin"
                          }
                        },
                        "rbd_image": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                        },
                        "rbd_pool": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                          "Default": {
                            "Type": "string",
                            "Value": "rbd"
                          }
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "vsphere_volume": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "volume_path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path that identifies vSphere volume vmdk"
                        }
                      }
                    }
                  }
                }
              }
            },
            "storage_class_name": {
              "Type": "String",
              "Optional": true,
              "Description": "A description of the persistent volume's class. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class"
            }
          }
        }
      }
    },
    "kubernetes_persistent_volume_claim": {
      "__timeouts__": [
        "create"
      ],
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard persistent volume claim's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the persistent volume claim that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume claim. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the persistent volume claim, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the persistent volume claim must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this persistent volume claim that can be used by clients to determine when persistent volume claim has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this persistent volume claim.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this persistent volume claim. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "access_modes": {
              "Type": "Set",
              "Required": true,
              "Description": "A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "resources": {
              "Type": "List",
              "Required": true,
              "Description": "A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "limits": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                  },
                  "requests": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                  }
                }
              }
            },
            "selector": {
              "Type": "List",
              "Optional": true,
              "Description": "A label query over volumes to consider for binding.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_expressions": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of label selector requirements. The requirements are ANDed.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The label key that the selector applies to."
                        },
                        "operator": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                        },
                        "values": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "match_labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }
                }
              }
            },
            "storage_class_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the storage class requested by the claim",
              "Computed": true
            },
            "volume_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The binding reference to the PersistentVolume backing this claim.",
              "Computed": true
            }
          }
        }
      },
      "wait_until_bound": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Whether to wait for the claim to reach `Bound` state (to find volume in which to claim the space)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      }
    },
    "kubernetes_pod": {
      "__timeouts__": [
        "create",
        "delete"
      ],
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard pod's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the pod that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the pod. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the pod, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the pod must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this pod that can be used by clients to determine when pod has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this pod.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this pod. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Specification of the desired behavior of the pod.",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "active_deadline_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
            },
            "container": {
              "Type": "List",
              "Optional": true,
              "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "args": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "command": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "env": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of environment variables to set in the container. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                        },
                        "value": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                        },
                        "value_from": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Source for the environment variable's value",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "config_map_key_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a key of a ConfigMap.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key to select."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "field_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "api_version": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "v1"
                                      }
                                    },
                                    "field_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the field to select in the specified API version"
                                    }
                                  }
                                }
                              },
                              "resource_field_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_name": {
                                      "Type": "String",
                                      "Optional": true
                                    },
                                    "resource": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Resource to select"
                                    }
                                  }
                                }
                              },
                              "secret_key_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key of the secret to select from. Must be a valid secret key."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "env_from": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "config_map_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The ConfigMap to select from",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "optional": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Specify whether the ConfigMap must be defined"
                              }
                            }
                          }
                        },
                        "prefix": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The Secret to select from",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              },
                              "optional": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Specify whether the Secret must be defined"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "image": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                  },
                  "image_pull_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                    "Computed": true
                  },
                  "lifecycle": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Actions that the management system should take in response to container lifecycle events",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "post_start": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pre_stop": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "liveness_probe": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "exec specifies the action to take.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "failure_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                          "Default": {
                            "Type": "int",
                            "Value": "3"
                          }
                        },
                        "http_get": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the http request to perform.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "host": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                              },
                              "http_header": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field name"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field value"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path to access on the HTTP server."
                              },
                              "port": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              },
                              "scheme": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "HTTP"
                                }
                              }
                            }
                          }
                        },
                        "initial_delay_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                        },
                        "period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "How often (in seconds) to perform the probe",
                          "Default": {
                            "Type": "int",
                            "Value": "10"
                          }
                        },
                        "success_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        },
                        "tcp_socket": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "port": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              }
                            }
                          }
                        },
                        "timeout_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                  },
                  "port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "container_port": {
                          "Type": "Int",
                          "Required": true,
                          "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                        },
                        "host_ip": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "What host IP to bind the external port to."
                        },
                        "host_port": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                        },
                        "protocol": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                          "Default": {
                            "Type": "string",
                            "Value": "TCP"
                          }
                        }
                      }
                    }
                  },
                  "readiness_probe": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "exec specifies the action to take.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "failure_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                          "Default": {
                            "Type": "int",
                            "Value": "3"
                          }
                        },
                        "http_get": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the http request to perform.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "host": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                              },
                              "http_header": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field name"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field value"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path to access on the HTTP server."
                              },
                              "port": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              },
                              "scheme": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "HTTP"
                                }
                              }
                            }
                          }
                        },
                        "initial_delay_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                        },
                        "period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "How often (in seconds) to perform the probe",
                          "Default": {
                            "Type": "int",
                            "Value": "10"
                          }
                        },
                        "success_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        },
                        "tcp_socket": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "port": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              }
                            }
                          }
                        },
                        "timeout_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        }
                      }
                    }
                  },
                  "resources": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "limits": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cpu": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              },
                              "memory": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              }
                            }
                          }
                        },
                        "requests": {
                          "Type": "List",
                          "Optional": true,
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cpu": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              },
                              "memory": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "security_context": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "allow_privilege_escalation": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                          "Default": {
                            "Type": "bool",
                            "Value": "true"
                          }
                        },
                        "capabilities": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "add": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Added capabilities",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "drop": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Removed capabilities",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "privileged": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "read_only_root_filesystem": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container has a read-only root filesystem. Default is false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "run_as_non_root": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                        },
                        "run_as_user": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                        },
                        "se_linux_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "level": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Level is SELinux level label that applies to the container."
                              },
                              "role": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Role is a SELinux role label that applies to the container."
                              },
                              "type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Type is a SELinux type label that applies to the container."
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "User is a SELinux user label that applies to the container."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "stdin": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "stdin_once": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "termination_message_path": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                    "Default": {
                      "Type": "string",
                      "Value": "/dev/termination-log"
                    }
                  },
                  "tty": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether this container should allocate a TTY for itself",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "volume_mount": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "mount_path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                        },
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "This must match the Name of a Volume."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "sub_path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                        }
                      }
                    }
                  },
                  "working_dir": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                  }
                }
              }
            },
            "dns_config": {
              "Type": "List",
              "Optional": true,
              "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "nameservers": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "option": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the option."
                        },
                        "value": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Value of the option. Optional: Defaults to empty."
                        }
                      }
                    }
                  },
                  "searches": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  }
                }
              }
            },
            "dns_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
              "Default": {
                "Type": "string",
                "Value": "ClusterFirst"
              }
            },
            "host_aliases": {
              "Type": "List",
              "Optional": true,
              "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "hostnames": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Hostnames for the IP address.",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "ip": {
                    "Type": "String",
                    "Required": true,
                    "Description": "IP address of the host file entry."
                  }
                }
              }
            },
            "host_ipc": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "host_network": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "host_pid": {
              "Type": "Bool",
              "Optional": true,
              "Description": "Use the host's pid namespace.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "hostname": {
              "Type": "String",
              "Optional": true,
              "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
              "Computed": true
            },
            "image_pull_secrets": {
              "Type": "List",
              "Optional": true,
              "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
              "Computed": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  }
                }
              }
            },
            "init_container": {
              "Type": "List",
              "Optional": true,
              "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "args": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "command": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "String"
                    }
                  },
                  "env": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of environment variables to set in the container. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                        },
                        "value": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                        },
                        "value_from": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Source for the environment variable's value",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "config_map_key_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a key of a ConfigMap.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key to select."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "field_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "api_version": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "v1"
                                      }
                                    },
                                    "field_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the field to select in the specified API version"
                                    }
                                  }
                                }
                              },
                              "resource_field_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_name": {
                                      "Type": "String",
                                      "Optional": true
                                    },
                                    "resource": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Resource to select"
                                    }
                                  }
                                }
                              },
                              "secret_key_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key of the secret to select from. Must be a valid secret key."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "env_from": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "config_map_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The ConfigMap to select from",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "optional": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Specify whether the ConfigMap must be defined"
                              }
                            }
                          }
                        },
                        "prefix": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The Secret to select from",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              },
                              "optional": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Specify whether the Secret must be defined"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "image": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                  },
                  "image_pull_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                    "Computed": true
                  },
                  "lifecycle": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Actions that the management system should take in response to container lifecycle events",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "post_start": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pre_stop": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "liveness_probe": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "exec specifies the action to take.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "failure_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                          "Default": {
                            "Type": "int",
                            "Value": "3"
                          }
                        },
                        "http_get": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the http request to perform.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "host": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                              },
                              "http_header": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field name"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field value"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path to access on the HTTP server."
                              },
                              "port": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              },
                              "scheme": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "HTTP"
                                }
                              }
                            }
                          }
                        },
                        "initial_delay_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                        },
                        "period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "How often (in seconds) to perform the probe",
                          "Default": {
                            "Type": "int",
                            "Value": "10"
                          }
                        },
                        "success_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        },
                        "tcp_socket": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "port": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              }
                            }
                          }
                        },
                        "timeout_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                  },
                  "port": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "container_port": {
                          "Type": "Int",
                          "Required": true,
                          "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                        },
                        "host_ip": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "What host IP to bind the external port to."
                        },
                        "host_port": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                        },
                        "protocol": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                          "Default": {
                            "Type": "string",
                            "Value": "TCP"
                          }
                        }
                      }
                    }
                  },
                  "readiness_probe": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "exec": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "exec specifies the action to take.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "failure_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                          "Default": {
                            "Type": "int",
                            "Value": "3"
                          }
                        },
                        "http_get": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the http request to perform.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "host": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                              },
                              "http_header": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field name"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The header field value"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path to access on the HTTP server."
                              },
                              "port": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              },
                              "scheme": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Scheme to use for connecting to the host.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "HTTP"
                                }
                              }
                            }
                          }
                        },
                        "initial_delay_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                        },
                        "period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "How often (in seconds) to perform the probe",
                          "Default": {
                            "Type": "int",
                            "Value": "10"
                          }
                        },
                        "success_threshold": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        },
                        "tcp_socket": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "port": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                              }
                            }
                          }
                        },
                        "timeout_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "Default": {
                            "Type": "int",
                            "Value": "1"
                          }
                        }
                      }
                    }
                  },
                  "resources": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "limits": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cpu": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              },
                              "memory": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              }
                            }
                          }
                        },
                        "requests": {
                          "Type": "List",
                          "Optional": true,
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "cpu": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              },
                              "memory": {
                                "Type": "String",
                                "Optional": true,
                                "Computed": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "security_context": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "allow_privilege_escalation": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                          "Default": {
                            "Type": "bool",
                            "Value": "true"
                          }
                        },
                        "capabilities": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "add": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Added capabilities",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "drop": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Removed capabilities",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "privileged": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "read_only_root_filesystem": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container has a read-only root filesystem. Default is false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "run_as_non_root": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                        },
                        "run_as_user": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                        },
                        "se_linux_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "level": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Level is SELinux level label that applies to the container."
                              },
                              "role": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Role is a SELinux role label that applies to the container."
                              },
                              "type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Type is a SELinux type label that applies to the container."
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "User is a SELinux user label that applies to the container."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "stdin": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "stdin_once": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "termination_message_path": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                    "Default": {
                      "Type": "string",
                      "Value": "/dev/termination-log"
                    }
                  },
                  "tty": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Whether this container should allocate a TTY for itself",
                    "Default": {
                      "Type": "bool",
                      "Value": "false"
                    }
                  },
                  "volume_mount": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "mount_path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                        },
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "This must match the Name of a Volume."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "sub_path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                        }
                      }
                    }
                  },
                  "working_dir": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                  }
                }
              }
            },
            "node_name": {
              "Type": "String",
              "Optional": true,
              "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
              "Computed": true
            },
            "node_selector": {
              "Type": "Map",
              "Optional": true,
              "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection."
            },
            "restart_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
              "Default": {
                "Type": "string",
                "Value": "Always"
              }
            },
            "security_context": {
              "Type": "List",
              "Optional": true,
              "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "fs_group": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                  },
                  "run_as_non_root": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                  },
                  "run_as_user": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                  },
                  "se_linux_options": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "level": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Level is SELinux level label that applies to the container."
                        },
                        "role": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Role is a SELinux role label that applies to the container."
                        },
                        "type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Type is a SELinux type label that applies to the container."
                        },
                        "user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "User is a SELinux user label that applies to the container."
                        }
                      }
                    }
                  },
                  "supplemental_groups": {
                    "Type": "Set",
                    "Optional": true,
                    "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                    "Elem": {
                      "Type": "SchemaElements",
                      "ElementsType": "Int"
                    }
                  }
                }
              }
            },
            "service_account_name": {
              "Type": "String",
              "Optional": true,
              "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
              "Computed": true
            },
            "subdomain": {
              "Type": "String",
              "Optional": true,
              "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all.."
            },
            "termination_grace_period_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
              "Default": {
                "Type": "int",
                "Value": "30"
              }
            },
            "volume": {
              "Type": "List",
              "Optional": true,
              "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "aws_elastic_block_store": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        },
                        "partition": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        },
                        "volume_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                        }
                      }
                    }
                  },
                  "azure_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "caching_mode": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Host Caching mode: None, Read Only, Read Write."
                        },
                        "data_disk_uri": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The URI the data disk in the blob storage"
                        },
                        "disk_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The Name of the data disk in the blob storage"
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        }
                      }
                    }
                  },
                  "azure_file": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "secret_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The name of secret that contains Azure Storage Account Name and Key"
                        },
                        "share_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Share Name"
                        }
                      }
                    }
                  },
                  "ceph_fs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "monitors": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        },
                        "secret_file": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                        }
                      }
                    }
                  },
                  "cinder": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        },
                        "volume_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                        }
                      }
                    }
                  },
                  "config_map": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "ConfigMap represents a configMap that should populate this volume",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "default_mode": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "Default": {
                            "Type": "string",
                            "Value": "0644"
                          }
                        },
                        "items": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "key": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The key to project."
                              },
                              "mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                              }
                            }
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                        }
                      }
                    }
                  },
                  "downward_api": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "default_mode": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "Default": {
                            "Type": "string",
                            "Value": "0644"
                          }
                        },
                        "items": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "field_ref": {
                                "Type": "List",
                                "Required": true,
                                "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "api_version": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "v1"
                                      }
                                    },
                                    "field_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the field to select in the specified API version"
                                    }
                                  }
                                }
                              },
                              "mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              },
                              "path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                              },
                              "resource_field_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_name": {
                                      "Type": "String",
                                      "Required": true
                                    },
                                    "quantity": {
                                      "Type": "String",
                                      "Optional": true
                                    },
                                    "resource": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Resource to select"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "empty_dir": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "medium": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                          "Default": {
                            "Type": "string"
                          }
                        }
                      }
                    }
                  },
                  "fc": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "lun": {
                          "Type": "Int",
                          "Required": true,
                          "Description": "FC target lun number"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "target_ww_ns": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "FC target worldwide names (WWNs)",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "flex_volume": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "driver": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Driver is the name of the driver to use for this volume."
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                        },
                        "options": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Extra command options if any."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "flocker": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "dataset_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                        },
                        "dataset_uuid": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                        }
                      }
                    }
                  },
                  "gce_persistent_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "partition": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "pd_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                        }
                      }
                    }
                  },
                  "git_repo": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "GitRepo represents a git repository at a particular revision.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "directory": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                        },
                        "repository": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Repository URL"
                        },
                        "revision": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Commit hash for the specified revision."
                        }
                      }
                    }
                  },
                  "glusterfs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "endpoints_name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        },
                        "path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                        }
                      }
                    }
                  },
                  "host_path": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                        }
                      }
                    }
                  },
                  "iscsi": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                        },
                        "iqn": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Target iSCSI Qualified Name."
                        },
                        "iscsi_interface": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                          "Default": {
                            "Type": "string",
                            "Value": "default"
                          }
                        },
                        "lun": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "iSCSI target lun number."
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                        },
                        "target_portal": {
                          "Type": "String",
                          "Required": true,
                          "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                        }
                      }
                    }
                  },
                  "local": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                        }
                      }
                    }
                  },
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                  },
                  "nfs": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        },
                        "server": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                        }
                      }
                    }
                  },
                  "persistent_volume_claim": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "The specification of a persistent volume.",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "claim_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Will force the ReadOnly setting in VolumeMounts.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        }
                      }
                    }
                  },
                  "photon_persistent_disk": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "pd_id": {
                          "Type": "String",
                          "Required": true,
                          "Description": "ID that identifies Photon Controller persistent disk"
                        }
                      }
                    }
                  },
                  "quobyte": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "group": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Group to map volume access to Default is no group"
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                        },
                        "registry": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                        },
                        "user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "User to map volume access to Defaults to serivceaccount user"
                        },
                        "volume": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Volume is a string that references an already created Quobyte volume by name."
                        }
                      }
                    }
                  },
                  "rbd": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "ceph_monitors": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                        },
                        "keyring": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Computed": true
                        },
                        "rados_user": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Default": {
                            "Type": "string",
                            "Value": "admin"
                          }
                        },
                        "rbd_image": {
                          "Type": "String",
                          "Required": true,
                          "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                        },
                        "rbd_pool": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                          "Default": {
                            "Type": "string",
                            "Value": "rbd"
                          }
                        },
                        "read_only": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "secret_ref": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "secret": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "default_mode": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "Default": {
                            "Type": "string",
                            "Value": "0644"
                          }
                        },
                        "items": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "key": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The key to project."
                              },
                              "mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                              }
                            }
                          }
                        },
                        "optional": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                        },
                        "secret_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                        }
                      }
                    }
                  },
                  "vsphere_volume": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_type": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                        },
                        "volume_path": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Path that identifies vSphere volume vmdk"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_replication_controller": {
      "__timeouts__": [
        "create",
        "update",
        "delete"
      ],
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard replication controller's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the replication controller that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the replication controller. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the replication controller, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the replication controller must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this replication controller that can be used by clients to determine when replication controller has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this replication controller.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this replication controller. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the specification of the desired behavior of the replication controller. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "min_ready_seconds": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
              "Default": {
                "Type": "int",
                "Value": "0"
              }
            },
            "replicas": {
              "Type": "Int",
              "Optional": true,
              "Description": "The number of desired replicas. Defaults to 1. More info: http://kubernetes.io/docs/user-guide/replication-controller#what-is-a-replication-controller",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "selector": {
              "Type": "Map",
              "Required": true,
              "Description": "A label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
            },
            "template": {
              "Type": "List",
              "Required": true,
              "Description": "Describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "active_deadline_seconds": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "container": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "args": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "command": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "env": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of environment variables to set in the container. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                              },
                              "value_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Source for the environment variable's value",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_key_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a key of a ConfigMap.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to select."
                                          },
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "field_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "api_version": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "v1"
                                            }
                                          },
                                          "field_path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path of the field to select in the specified API version"
                                          }
                                        }
                                      }
                                    },
                                    "resource_field_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "container_name": {
                                            "Type": "String",
                                            "Optional": true
                                          },
                                          "resource": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Resource to select"
                                          }
                                        }
                                      }
                                    },
                                    "secret_key_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key of the secret to select from. Must be a valid secret key."
                                          },
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "env_from": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "config_map_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The ConfigMap to select from",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Specify whether the ConfigMap must be defined"
                                    }
                                  }
                                }
                              },
                              "prefix": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                              },
                              "secret_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The Secret to select from",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Specify whether the Secret must be defined"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "image": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                        },
                        "image_pull_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                          "Computed": true
                        },
                        "lifecycle": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Actions that the management system should take in response to container lifecycle events",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "post_start": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pre_stop": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "liveness_probe": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "failure_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "3"
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "initial_delay_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                              },
                              "period_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "How often (in seconds) to perform the probe",
                                "Default": {
                                  "Type": "int",
                                  "Value": "10"
                                }
                              },
                              "success_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              },
                              "timeout_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                        },
                        "port": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "container_port": {
                                "Type": "Int",
                                "Required": true,
                                "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                              },
                              "host_ip": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "What host IP to bind the external port to."
                              },
                              "host_port": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                              },
                              "protocol": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                "Default": {
                                  "Type": "string",
                                  "Value": "TCP"
                                }
                              }
                            }
                          }
                        },
                        "readiness_probe": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "failure_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "3"
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "initial_delay_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                              },
                              "period_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "How often (in seconds) to perform the probe",
                                "Default": {
                                  "Type": "int",
                                  "Value": "10"
                                }
                              },
                              "success_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              },
                              "timeout_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              }
                            }
                          }
                        },
                        "resources": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "limits": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "cpu": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    },
                                    "memory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "Type": "List",
                                "Optional": true,
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "cpu": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    },
                                    "memory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "allow_privilege_escalation": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "true"
                                }
                              },
                              "capabilities": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "add": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Added capabilities",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "drop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Removed capabilities",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "read_only_root_filesystem": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "stdin": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "stdin_once": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "termination_message_path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                          "Default": {
                            "Type": "string",
                            "Value": "/dev/termination-log"
                          }
                        },
                        "tty": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container should allocate a TTY for itself",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "volume_mount": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "mount_path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "This must match the Name of a Volume."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "sub_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                              }
                            }
                          }
                        },
                        "working_dir": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                        }
                      }
                    }
                  },
                  "dns_config": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
                    "MaxItems": 1,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "nameservers": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "option": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the option."
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Value of the option. Optional: Defaults to empty."
                              }
                            }
                          }
                        },
                        "searches": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "dns_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "host_aliases": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "hostnames": {
                          "Type": "List",
                          "Required": true,
                          "Description": "Hostnames for the IP address.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "ip": {
                          "Type": "String",
                          "Required": true,
                          "Description": "IP address of the host file entry."
                        }
                      }
                    }
                  },
                  "host_ipc": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "host_network": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "host_pid": {
                    "Type": "Bool",
                    "Optional": true,
                    "Description": "Use the host's pid namespace.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "hostname": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "image_pull_secrets": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                        }
                      }
                    }
                  },
                  "init_container": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "args": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "command": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "env": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of environment variables to set in the container. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                              },
                              "value": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                              },
                              "value_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Source for the environment variable's value",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_key_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a key of a ConfigMap.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to select."
                                          },
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "field_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "api_version": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "v1"
                                            }
                                          },
                                          "field_path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path of the field to select in the specified API version"
                                          }
                                        }
                                      }
                                    },
                                    "resource_field_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "container_name": {
                                            "Type": "String",
                                            "Optional": true
                                          },
                                          "resource": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Resource to select"
                                          }
                                        }
                                      }
                                    },
                                    "secret_key_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key of the secret to select from. Must be a valid secret key."
                                          },
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "env_from": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "config_map_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The ConfigMap to select from",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Specify whether the ConfigMap must be defined"
                                    }
                                  }
                                }
                              },
                              "prefix": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                              },
                              "secret_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The Secret to select from",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Specify whether the Secret must be defined"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "image": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                        },
                        "image_pull_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                          "Computed": true
                        },
                        "lifecycle": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Actions that the management system should take in response to container lifecycle events",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "post_start": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pre_stop": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "liveness_probe": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "failure_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "3"
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "initial_delay_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                              },
                              "period_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "How often (in seconds) to perform the probe",
                                "Default": {
                                  "Type": "int",
                                  "Value": "10"
                                }
                              },
                              "success_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              },
                              "timeout_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Required": true,
                          "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                        },
                        "port": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "container_port": {
                                "Type": "Int",
                                "Required": true,
                                "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                              },
                              "host_ip": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "What host IP to bind the external port to."
                              },
                              "host_port": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                              },
                              "protocol": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                "Default": {
                                  "Type": "string",
                                  "Value": "TCP"
                                }
                              }
                            }
                          }
                        },
                        "readiness_probe": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "exec": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "exec specifies the action to take.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "command": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "failure_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "3"
                                }
                              },
                              "http_get": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Specifies the http request to perform.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "host": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                    },
                                    "http_header": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field name"
                                          },
                                          "value": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The header field value"
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path to access on the HTTP server."
                                    },
                                    "port": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    },
                                    "scheme": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Scheme to use for connecting to the host.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "HTTP"
                                      }
                                    }
                                  }
                                }
                              },
                              "initial_delay_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                              },
                              "period_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "How often (in seconds) to perform the probe",
                                "Default": {
                                  "Type": "int",
                                  "Value": "10"
                                }
                              },
                              "success_threshold": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              },
                              "tcp_socket": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "port": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                    }
                                  }
                                }
                              },
                              "timeout_seconds": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "Default": {
                                  "Type": "int",
                                  "Value": "1"
                                }
                              }
                            }
                          }
                        },
                        "resources": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "limits": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "cpu": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    },
                                    "memory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    }
                                  }
                                }
                              },
                              "requests": {
                                "Type": "List",
                                "Optional": true,
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "cpu": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    },
                                    "memory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Computed": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "allow_privilege_escalation": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "true"
                                }
                              },
                              "capabilities": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "add": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Added capabilities",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "drop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Removed capabilities",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "privileged": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "read_only_root_filesystem": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "stdin": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "stdin_once": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "termination_message_path": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                          "Default": {
                            "Type": "string",
                            "Value": "/dev/termination-log"
                          }
                        },
                        "tty": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Whether this container should allocate a TTY for itself",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "volume_mount": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "mount_path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "This must match the Name of a Volume."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "sub_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                              }
                            }
                          }
                        },
                        "working_dir": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                        }
                      }
                    }
                  },
                  "metadata": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Standard replication controller's template's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "annotations": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "An unstructured key value map stored with the replication controller's template that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "generate_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
                          "ConflictsWith": [
                            "metadata.name"
                          ]
                        },
                        "generation": {
                          "Type": "Int",
                          "Description": "A sequence number representing a specific generation of the desired state.",
                          "Computed": true
                        },
                        "labels": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the replication controller's template. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the replication controller's template, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                          "Computed": true,
                          "ConflictsWith": [
                            "metadata.generate_name"
                          ]
                        },
                        "namespace": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Namespace defines the space within which name of the replication controller's template must be unique.",
                          "Default": {
                            "Type": "string",
                            "Value": "default"
                          }
                        },
                        "resource_version": {
                          "Type": "String",
                          "Description": "An opaque value that represents the internal version of this replication controller's template that can be used by clients to determine when replication controller's template has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                          "Computed": true
                        },
                        "self_link": {
                          "Type": "String",
                          "Description": "A URL representing this replication controller's template.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "The unique in time and space value for this replication controller's template. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "node_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "node_selector": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "restart_policy": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "security_context": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
                    "Computed": true,
                    "MaxItems": 1,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "fs_group": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                        },
                        "run_as_non_root": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                        },
                        "run_as_user": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                        },
                        "se_linux_options": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "level": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Level is SELinux level label that applies to the container."
                              },
                              "role": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Role is a SELinux role label that applies to the container."
                              },
                              "type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Type is a SELinux type label that applies to the container."
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "User is a SELinux user label that applies to the container."
                              }
                            }
                          }
                        },
                        "supplemental_groups": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "Int"
                          }
                        }
                      }
                    }
                  },
                  "service_account_name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "spec": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Spec of the pods managed by the replication controller",
                    "Computed": true,
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "active_deadline_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                          "Computed": true
                        },
                        "container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "dns_config": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "nameservers": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "option": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the option."
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Value of the option. Optional: Defaults to empty."
                                    }
                                  }
                                }
                              },
                              "searches": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "dns_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                          "Computed": true
                        },
                        "host_aliases": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "hostnames": {
                                "Type": "List",
                                "Required": true,
                                "Description": "Hostnames for the IP address.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "ip": {
                                "Type": "String",
                                "Required": true,
                                "Description": "IP address of the host file entry."
                              }
                            }
                          }
                        },
                        "host_ipc": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
                          "Computed": true
                        },
                        "host_network": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                          "Computed": true
                        },
                        "host_pid": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's pid namespace.",
                          "Computed": true
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                          "Computed": true
                        },
                        "image_pull_secrets": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "init_container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "node_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                          "Computed": true
                        },
                        "node_selector": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection.",
                          "Computed": true
                        },
                        "restart_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                          "Computed": true
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
                          "Computed": true,
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_group": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              },
                              "supplemental_groups": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "Int"
                                }
                              }
                            }
                          }
                        },
                        "service_account_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                          "Computed": true
                        },
                        "subdomain": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                          "Computed": true
                        },
                        "termination_grace_period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                          "Computed": true
                        },
                        "volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "aws_elastic_block_store": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    }
                                  }
                                }
                              },
                              "azure_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "caching_mode": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Host Caching mode: None, Read Only, Read Write."
                                    },
                                    "data_disk_uri": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The URI the data disk in the blob storage"
                                    },
                                    "disk_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Name of the data disk in the blob storage"
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "azure_file": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The name of secret that contains Azure Storage Account Name and Key"
                                    },
                                    "share_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Share Name"
                                    }
                                  }
                                }
                              },
                              "ceph_fs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_file": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    }
                                  }
                                }
                              },
                              "cinder": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    }
                                  }
                                }
                              },
                              "config_map": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "ConfigMap represents a configMap that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "downward_api": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "field_ref": {
                                            "Type": "List",
                                            "Required": true,
                                            "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Required": true
                                                },
                                                "quantity": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "empty_dir": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "medium": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                      "Default": {
                                        "Type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fc": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "FC target lun number"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "target_ww_ns": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "FC target worldwide names (WWNs)",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "flex_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "driver": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Driver is the name of the driver to use for this volume."
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                    },
                                    "options": {
                                      "Type": "Map",
                                      "Optional": true,
                                      "Description": "Extra command options if any."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "flocker": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "dataset_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                                    },
                                    "dataset_uuid": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                                    }
                                  }
                                }
                              },
                              "gce_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "pd_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    }
                                  }
                                }
                              },
                              "git_repo": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "GitRepo represents a git repository at a particular revision.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "directory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                                    },
                                    "repository": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Repository URL"
                                    },
                                    "revision": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Commit hash for the specified revision."
                                    }
                                  }
                                }
                              },
                              "glusterfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "endpoints_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    }
                                  }
                                }
                              },
                              "host_path": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                                    }
                                  }
                                }
                              },
                              "iscsi": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                                    },
                                    "iqn": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Target iSCSI Qualified Name."
                                    },
                                    "iscsi_interface": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "default"
                                      }
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "iSCSI target lun number."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                                    },
                                    "target_portal": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                    }
                                  }
                                }
                              },
                              "local": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "nfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "server": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    }
                                  }
                                }
                              },
                              "persistent_volume_claim": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The specification of a persistent volume.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "claim_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Will force the ReadOnly setting in VolumeMounts.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "photon_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "pd_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "ID that identifies Photon Controller persistent disk"
                                    }
                                  }
                                }
                              },
                              "quobyte": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "group": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Group to map volume access to Default is no group"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                                    },
                                    "registry": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User to map volume access to Defaults to serivceaccount user"
                                    },
                                    "volume": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume is a string that references an already created Quobyte volume by name."
                                    }
                                  }
                                }
                              },
                              "rbd": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "ceph_monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                                    },
                                    "keyring": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Computed": true
                                    },
                                    "rados_user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "admin"
                                      }
                                    },
                                    "rbd_image": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                                    },
                                    "rbd_pool": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "rbd"
                                      }
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "secret": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                                    }
                                  }
                                }
                              },
                              "vsphere_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "volume_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that identifies vSphere volume vmdk"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "subdomain": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all..",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "termination_grace_period_seconds": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field"
                  },
                  "volume": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
                    "Computed": true,
                    "ConflictsWith": [
                      "spec.0.template.0.spec",
                      "spec.0.template.0.metadata"
                    ],
                    "Deprecated": "This field is deprecated because template was incorrectly defined as a PodSpec preventing the definition of metadata. Please use the one under the spec field",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "aws_elastic_block_store": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                              },
                              "partition": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                              },
                              "volume_id": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                              }
                            }
                          }
                        },
                        "azure_disk": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "caching_mode": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Host Caching mode: None, Read Only, Read Write."
                              },
                              "data_disk_uri": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The URI the data disk in the blob storage"
                              },
                              "disk_name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The Name of the data disk in the blob storage"
                              },
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              }
                            }
                          }
                        },
                        "azure_file": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                              },
                              "secret_name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The name of secret that contains Azure Storage Account Name and Key"
                              },
                              "share_name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Share Name"
                              }
                            }
                          }
                        },
                        "ceph_fs": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "monitors": {
                                "Type": "Set",
                                "Required": true,
                                "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                              },
                              "secret_file": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                              },
                              "secret_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                              }
                            }
                          }
                        },
                        "cinder": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                              },
                              "volume_id": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                              }
                            }
                          }
                        },
                        "config_map": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "ConfigMap represents a configMap that should populate this volume",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "default_mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "0644"
                                }
                              },
                              "items": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key to project."
                                    },
                                    "mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "downward_api": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "default_mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "0644"
                                }
                              },
                              "items": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "field_ref": {
                                      "Type": "List",
                                      "Required": true,
                                      "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "api_version": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "v1"
                                            }
                                          },
                                          "field_path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path of the field to select in the specified API version"
                                          }
                                        }
                                      }
                                    },
                                    "mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                    },
                                    "resource_field_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "container_name": {
                                            "Type": "String",
                                            "Required": true
                                          },
                                          "quantity": {
                                            "Type": "String",
                                            "Optional": true
                                          },
                                          "resource": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Resource to select"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "empty_dir": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "medium": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "Default": {
                                  "Type": "string"
                                }
                              }
                            }
                          }
                        },
                        "fc": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                              },
                              "lun": {
                                "Type": "Int",
                                "Required": true,
                                "Description": "FC target lun number"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                              },
                              "target_ww_ns": {
                                "Type": "Set",
                                "Required": true,
                                "Description": "FC target worldwide names (WWNs)",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "flex_volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "driver": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Driver is the name of the driver to use for this volume."
                              },
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                              },
                              "options": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "Extra command options if any."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                              },
                              "secret_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "flocker": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "dataset_name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                              },
                              "dataset_uuid": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                              }
                            }
                          }
                        },
                        "gce_persistent_disk": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                              },
                              "partition": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                              },
                              "pd_name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                              }
                            }
                          }
                        },
                        "git_repo": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "GitRepo represents a git repository at a particular revision.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "directory": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                              },
                              "repository": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Repository URL"
                              },
                              "revision": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Commit hash for the specified revision."
                              }
                            }
                          }
                        },
                        "glusterfs": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "endpoints_name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                              },
                              "path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                              }
                            }
                          }
                        },
                        "host_path": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                              }
                            }
                          }
                        },
                        "iscsi": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                              },
                              "iqn": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Target iSCSI Qualified Name."
                              },
                              "iscsi_interface": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                "Default": {
                                  "Type": "string",
                                  "Value": "default"
                                }
                              },
                              "lun": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "iSCSI target lun number."
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                              },
                              "target_portal": {
                                "Type": "String",
                                "Required": true,
                                "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                              }
                            }
                          }
                        },
                        "local": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                              }
                            }
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                        },
                        "nfs": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                              },
                              "server": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                              }
                            }
                          }
                        },
                        "persistent_volume_claim": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "The specification of a persistent volume.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "claim_name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Will force the ReadOnly setting in VolumeMounts.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              }
                            }
                          }
                        },
                        "photon_persistent_disk": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                              },
                              "pd_id": {
                                "Type": "String",
                                "Required": true,
                                "Description": "ID that identifies Photon Controller persistent disk"
                              }
                            }
                          }
                        },
                        "quobyte": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "group": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Group to map volume access to Default is no group"
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                              },
                              "registry": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                              },
                              "user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "User to map volume access to Defaults to serivceaccount user"
                              },
                              "volume": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Volume is a string that references an already created Quobyte volume by name."
                              }
                            }
                          }
                        },
                        "rbd": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "ceph_monitors": {
                                "Type": "Set",
                                "Required": true,
                                "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                              },
                              "keyring": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                "Computed": true
                              },
                              "rados_user": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                "Default": {
                                  "Type": "string",
                                  "Value": "admin"
                                }
                              },
                              "rbd_image": {
                                "Type": "String",
                                "Required": true,
                                "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                              },
                              "rbd_pool": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "rbd"
                                }
                              },
                              "read_only": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "secret_ref": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "secret": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "default_mode": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "0644"
                                }
                              },
                              "items": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The key to project."
                                    },
                                    "mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                    }
                                  }
                                }
                              },
                              "optional": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                              },
                              "secret_name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                              }
                            }
                          }
                        },
                        "vsphere_volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_type": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                              },
                              "volume_path": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Path that identifies vSphere volume vmdk"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_resource_quota": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard resource quota's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the resource quota that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the resource quota. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the resource quota, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the resource quota must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this resource quota that can be used by clients to determine when resource quota has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this resource quota.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this resource quota. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Optional": true,
        "Description": "Spec defines the desired quota. https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hard": {
              "Type": "Map",
              "Optional": true,
              "Description": "The set of desired hard limits for each named resource. More info: http://releases.k8s.io/HEAD/docs/design/admission_control_resource_quota.md#admissioncontrol-plugin-resourcequota",
              "Elem": {
                "Value": "String"
              }
            },
            "scopes": {
              "Type": "Set",
              "Optional": true,
              "Description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "kubernetes_role": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard role's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the role that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the role. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the role, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the role must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this role that can be used by clients to determine when role has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this role.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this role. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "rule": {
        "Type": "List",
        "Required": true,
        "Description": "Rule defining a set of permissions for the role",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_groups": {
              "Type": "Set",
              "Required": true,
              "Description": "Name of the APIGroup that contains the resources",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "resource_names": {
              "Type": "Set",
              "Optional": true,
              "Description": "White list of names that the rule applies to",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "resources": {
              "Type": "Set",
              "Required": true,
              "Description": "List of resources that the rule applies to",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "verbs": {
              "Type": "Set",
              "Required": true,
              "Description": "List of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            }
          }
        }
      }
    },
    "kubernetes_role_binding": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard roleBinding's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the roleBinding that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the roleBinding. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the roleBinding, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the roleBinding must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this roleBinding that can be used by clients to determine when roleBinding has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this roleBinding.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this roleBinding. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "role_ref": {
        "Type": "List",
        "Required": true,
        "Description": "RoleRef references the Role for this binding",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_group": {
              "Type": "String",
              "Required": true,
              "Description": "The API group of the user. The only value possible at the moment is `rbac.authorization.k8s.io`."
            },
            "kind": {
              "Type": "String",
              "Required": true,
              "Description": "The kind of resource."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the User to bind to."
            }
          }
        }
      },
      "subject": {
        "Type": "List",
        "Required": true,
        "Description": "Subjects defines the entities to bind a Role to.",
        "MinItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "api_group": {
              "Type": "String",
              "Optional": true,
              "Description": "The API group of the subject resource.",
              "Computed": true
            },
            "kind": {
              "Type": "String",
              "Required": true,
              "Description": "The kind of resource."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the resource to bind to."
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "The Namespace of the subject resource.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            }
          }
        }
      }
    },
    "kubernetes_secret": {
      "data": {
        "Type": "Map",
        "Optional": true,
        "Description": "A map of the secret data."
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard secret's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the secret, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the secret must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this secret that can be used by clients to determine when secret has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this secret.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this secret. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Optional": true,
        "Description": "Type of secret",
        "Default": {
          "Type": "string",
          "Value": "Opaque"
        }
      }
    },
    "kubernetes_service": {
      "load_balancer_ingress": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hostname": {
              "Type": "String",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard service's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the service must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this service.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the behavior of a service. https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "The IP address of the service. It is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. `None` can be specified for headless services when proxying is not required. Ignored if type is `ExternalName`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "Computed": true
            },
            "external_ips": {
              "Type": "Set",
              "Optional": true,
              "Description": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "external_name": {
              "Type": "String",
              "Optional": true,
              "Description": "The external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires `type` to be `ExternalName`."
            },
            "load_balancer_ip": {
              "Type": "String",
              "Optional": true,
              "Description": "Only applies to `type = LoadBalancer`. LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying this field when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature."
            },
            "load_balancer_source_ranges": {
              "Type": "Set",
              "Optional": true,
              "Description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature. More info: http://kubernetes.io/docs/user-guide/services-firewalls",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "port": {
              "Type": "List",
              "Optional": true,
              "Description": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The name of this port within the service. All ports within the service must have unique names. Optional if only one ServicePort is defined on this service."
                  },
                  "node_port": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "The port on each node on which this service is exposed when `type` is `NodePort` or `LoadBalancer`. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the `type` of this service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
                    "Computed": true
                  },
                  "port": {
                    "Type": "Int",
                    "Required": true,
                    "Description": "The port that will be exposed by this service."
                  },
                  "protocol": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.",
                    "Default": {
                      "Type": "string",
                      "Value": "TCP"
                    }
                  },
                  "target_port": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. This field is ignored for services with `cluster_ip = \"None\"`. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
                    "Computed": true
                  }
                }
              }
            },
            "publish_not_ready_addresses": {
              "Type": "Bool",
              "Optional": true,
              "Description": "When set to true, indicates that DNS implementations must publish the `notReadyAddresses` of subsets for the Endpoints associated with the Service. The default value is `false`. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate `SRV` records for its Pods without respect to their readiness for purpose of peer discovery.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "selector": {
              "Type": "Map",
              "Optional": true,
              "Description": "Route service traffic to pods with label keys and values matching this selector. Only applies to types `ClusterIP`, `NodePort`, and `LoadBalancer`. More info: http://kubernetes.io/docs/user-guide/services#overview"
            },
            "session_affinity": {
              "Type": "String",
              "Optional": true,
              "Description": "Used to maintain session affinity. Supports `ClientIP` and `None`. Defaults to `None`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "Default": {
                "Type": "string",
                "Value": "None"
              }
            },
            "type": {
              "Type": "String",
              "Optional": true,
              "Description": "Determines how the service is exposed. Defaults to `ClusterIP`. Valid options are `ExternalName`, `ClusterIP`, `NodePort`, and `LoadBalancer`. `ExternalName` maps to the specified `external_name`. More info: http://kubernetes.io/docs/user-guide/services#overview",
              "Default": {
                "Type": "string",
                "Value": "ClusterIP"
              }
            }
          }
        }
      }
    },
    "kubernetes_service_account": {
      "automount_service_account_token": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True to enable automatic mounting of the service account token"
      },
      "default_secret_name": {
        "Type": "String",
        "Computed": true
      },
      "image_pull_secret": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of references to secrets in the same namespace to use for pulling any images in pods that reference this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }
          }
        }
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard service account's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the service account that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service account. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the service account, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the service account must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this service account that can be used by clients to determine when service account has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this service account.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this service account. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "secret": {
        "Type": "Set",
        "Optional": true,
        "Description": "A list of secrets allowed to be used by pods running using this Service Account. More info: http://kubernetes.io/docs/user-guide/secrets",
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }
          }
        }
      }
    },
    "kubernetes_stateful_set": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard stateful set's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the stateful set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the stateful set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the stateful set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.generate_name"
              ]
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the stateful set must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this stateful set that can be used by clients to determine when stateful set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this stateful set.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this stateful set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Required": true,
        "Description": "Spec defines the desired identities of pods in this set.",
        "MaxItems": 1,
        "MinItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "pod_management_policy": {
              "Type": "String",
              "Optional": true,
              "Description": "Controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down.",
              "Computed": true
            },
            "replicas": {
              "Type": "Int",
              "Optional": true,
              "Description": "The desired number of replicas of the given Template, in the sense that they are instantiations of the same Template. Value must be a positive integer.",
              "Default": {
                "Type": "int",
                "Value": "1"
              }
            },
            "revision_history_limit": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of revisions that will be maintained in the StatefulSet's revision history. The default value is 10.",
              "Computed": true
            },
            "selector": {
              "Type": "List",
              "Required": true,
              "Description": "A label query over pods that should match the replica count. It must match the pod template's labels.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "match_expressions": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "A list of label selector requirements. The requirements are ANDed.",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "key": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The label key that the selector applies to."
                        },
                        "operator": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                        },
                        "values": {
                          "Type": "Set",
                          "Optional": true,
                          "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        }
                      }
                    }
                  },
                  "match_labels": {
                    "Type": "Map",
                    "Optional": true,
                    "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                  }
                }
              }
            },
            "service_name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set."
            },
            "template": {
              "Type": "List",
              "Required": true,
              "Description": "The object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template.",
              "MaxItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "metadata": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Standard stateful set's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "annotations": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "An unstructured key value map stored with the stateful set that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "generate_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
                          "ConflictsWith": [
                            "metadata.0.name"
                          ]
                        },
                        "generation": {
                          "Type": "Int",
                          "Description": "A sequence number representing a specific generation of the desired state.",
                          "Computed": true
                        },
                        "labels": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the stateful set. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the stateful set, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                          "Computed": true,
                          "ConflictsWith": [
                            "metadata.0.generate_name"
                          ]
                        },
                        "resource_version": {
                          "Type": "String",
                          "Description": "An opaque value that represents the internal version of this stateful set that can be used by clients to determine when stateful set has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                          "Computed": true
                        },
                        "self_link": {
                          "Type": "String",
                          "Description": "A URL representing this stateful set.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "The unique in time and space value for this stateful set. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "spec": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "Spec of the pods owned by the stateful set",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "active_deadline_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer."
                        },
                        "container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "dns_config": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "nameservers": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "option": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the option."
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Value of the option. Optional: Defaults to empty."
                                    }
                                  }
                                }
                              },
                              "searches": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              }
                            }
                          }
                        },
                        "dns_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Set DNS policy for containers within the pod. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'. Optional: Defaults to 'ClusterFirst', see [Kubernetes reference](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).",
                          "Default": {
                            "Type": "string",
                            "Value": "ClusterFirst"
                          }
                        },
                        "host_aliases": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of hosts and IPs that will be injected into the pod's hosts file if specified. Optional: Defaults to empty.",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "hostnames": {
                                "Type": "List",
                                "Required": true,
                                "Description": "Hostnames for the IP address.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "ip": {
                                "Type": "String",
                                "Required": true,
                                "Description": "IP address of the host file entry."
                              }
                            }
                          }
                        },
                        "host_ipc": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's ipc namespace. Optional: Defaults to false.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_network": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "host_pid": {
                          "Type": "Bool",
                          "Optional": true,
                          "Description": "Use the host's pid namespace.",
                          "Default": {
                            "Type": "bool",
                            "Value": "false"
                          }
                        },
                        "hostname": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                          "Computed": true
                        },
                        "image_pull_secrets": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
                          "Computed": true,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              }
                            }
                          }
                        },
                        "init_container": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of init containers belonging to the pod. Init containers always run to completion and each must complete successfully before the next is started. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "args": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "command": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/containers#containers-and-commands",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "String"
                                }
                              },
                              "env": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of environment variables to set in the container. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Name of the environment variable. Must be a C_IDENTIFIER"
                                    },
                                    "value": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
                                    },
                                    "value_from": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Source for the environment variable's value",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "config_map_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a key of a ConfigMap.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key to select."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          },
                                          "field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          },
                                          "secret_key_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.podIP..",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "key": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The key of the secret to select from. Must be a valid secret key."
                                                },
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "env_from": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "config_map_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The ConfigMap to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the ConfigMap must be defined"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The Secret to select from",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                          },
                                          "optional": {
                                            "Type": "Bool",
                                            "Optional": true,
                                            "Description": "Specify whether the Secret must be defined"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "image": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Docker image name. More info: http://kubernetes.io/docs/user-guide/images"
                              },
                              "image_pull_policy": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/images#updating-images",
                                "Computed": true
                              },
                              "lifecycle": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Actions that the management system should take in response to container lifecycle events",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "post_start": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "post_start is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pre_stop": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "pre_stop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: http://kubernetes.io/docs/user-guide/container-environment#hook-details",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "exec": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "exec specifies the action to take.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "command": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                  "Elem": {
                                                    "Type": "SchemaElements",
                                                    "ElementsType": "String"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "http_get": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Specifies the http request to perform.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "host": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                                },
                                                "http_header": {
                                                  "Type": "List",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Elem": {
                                                    "Type": "SchemaInfo",
                                                    "Info": {
                                                      "name": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field name"
                                                      },
                                                      "value": {
                                                        "Type": "String",
                                                        "Optional": true,
                                                        "Description": "The header field value"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path to access on the HTTP server."
                                                },
                                                "port": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                },
                                                "scheme": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Scheme to use for connecting to the host.",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "HTTP"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "tcp_socket": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "port": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "liveness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Required": true,
                                "Description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated."
                              },
                              "port": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "container_port": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536."
                                    },
                                    "host_ip": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What host IP to bind the external port to."
                                    },
                                    "host_port": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services"
                                    },
                                    "protocol": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "TCP"
                                      }
                                    }
                                  }
                                }
                              },
                              "readiness_probe": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "exec": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "exec specifies the action to take.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "command": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "failure_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "3"
                                      }
                                    },
                                    "http_get": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Specifies the http request to perform.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "host": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
                                          },
                                          "http_header": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "name": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field name"
                                                },
                                                "value": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "The header field value"
                                                }
                                              }
                                            }
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Path to access on the HTTP server."
                                          },
                                          "port": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          },
                                          "scheme": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Scheme to use for connecting to the host.",
                                            "Default": {
                                              "Type": "string",
                                              "Value": "HTTP"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "initial_delay_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes"
                                    },
                                    "period_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "How often (in seconds) to perform the probe",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "10"
                                      }
                                    },
                                    "success_threshold": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    },
                                    "tcp_socket": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "port": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
                                          }
                                        }
                                      }
                                    },
                                    "timeout_seconds": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "Number of seconds after which the probe times out. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes",
                                      "Default": {
                                        "Type": "int",
                                        "Value": "1"
                                      }
                                    }
                                  }
                                }
                              },
                              "resources": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Compute Resources required by this container. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                                "Computed": true,
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "limits": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Describes the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/",
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    },
                                    "requests": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Computed": true,
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "cpu": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          },
                                          "memory": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Computed": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "security_context": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Security options the pod should run with. More info: http://releases.k8s.io/HEAD/docs/design/security_context.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "allow_privilege_escalation": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "true"
                                      }
                                    },
                                    "capabilities": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "add": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Added capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          },
                                          "drop": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Removed capabilities",
                                            "Elem": {
                                              "Type": "SchemaElements",
                                              "ElementsType": "String"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "read_only_root_filesystem": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether this container has a read-only root filesystem. Default is false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "run_as_non_root": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "run_as_user": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                                    },
                                    "se_linux_options": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "level": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Level is SELinux level label that applies to the container."
                                          },
                                          "role": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Role is a SELinux role label that applies to the container."
                                          },
                                          "type": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Type is a SELinux type label that applies to the container."
                                          },
                                          "user": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "User is a SELinux user label that applies to the container."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "stdin": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. ",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "stdin_once": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF.",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "termination_message_path": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Defaults to /dev/termination-log. Cannot be updated.",
                                "Default": {
                                  "Type": "string",
                                  "Value": "/dev/termination-log"
                                }
                              },
                              "tty": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Whether this container should allocate a TTY for itself",
                                "Default": {
                                  "Type": "bool",
                                  "Value": "false"
                                }
                              },
                              "volume_mount": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "mount_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path within the container at which the volume should be mounted. Must not contain ':'."
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "This must match the Name of a Volume."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "sub_path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
                                    }
                                  }
                                }
                              },
                              "working_dir": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated."
                              }
                            }
                          }
                        },
                        "node_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                          "Computed": true
                        },
                        "node_selector": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: http://kubernetes.io/docs/user-guide/node-selection."
                        },
                        "restart_policy": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. More info: http://kubernetes.io/docs/user-guide/pod-states#restartpolicy.",
                          "Default": {
                            "Type": "string",
                            "Value": "Always"
                          }
                        },
                        "security_context": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "fs_group": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- If unset, the Kubelet will not modify the ownership and permissions of any volume."
                              },
                              "run_as_non_root": {
                                "Type": "Bool",
                                "Optional": true,
                                "Description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
                              },
                              "run_as_user": {
                                "Type": "Int",
                                "Optional": true,
                                "Description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container."
                              },
                              "se_linux_options": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "level": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Level is SELinux level label that applies to the container."
                                    },
                                    "role": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Role is a SELinux role label that applies to the container."
                                    },
                                    "type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Type is a SELinux type label that applies to the container."
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is a SELinux user label that applies to the container."
                                    }
                                  }
                                }
                              },
                              "supplemental_groups": {
                                "Type": "Set",
                                "Optional": true,
                                "Description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID. If unspecified, no groups will be added to any container.",
                                "Elem": {
                                  "Type": "SchemaElements",
                                  "ElementsType": "Int"
                                }
                              }
                            }
                          }
                        },
                        "service_account_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: http://releases.k8s.io/HEAD/docs/design/service_accounts.md.",
                          "Computed": true
                        },
                        "subdomain": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "If specified, the fully qualified Pod hostname will be \"...svc.\". If not specified, the pod will not have a domainname at all.."
                        },
                        "termination_grace_period_seconds": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process.",
                          "Default": {
                            "Type": "int",
                            "Value": "30"
                          }
                        },
                        "volume": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "List of volumes that can be mounted by containers belonging to the pod. More info: http://kubernetes.io/docs/user-guide/volumes",
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "aws_elastic_block_store": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty)."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to set the read-only property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
                                    }
                                  }
                                }
                              },
                              "azure_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "caching_mode": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Host Caching mode: None, Read Only, Read Write."
                                    },
                                    "data_disk_uri": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The URI the data disk in the blob storage"
                                    },
                                    "disk_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Name of the data disk in the blob storage"
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write).",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "azure_file": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an Azure File Service mount on the host and bind mount to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The name of secret that contains Azure Storage Account Name and Key"
                                    },
                                    "share_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Share Name"
                                    }
                                  }
                                }
                              },
                              "ceph_fs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Ceph FS mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Used as the mounted root, rather than the full Ceph tree, default is /"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to `false` (read/write). More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_file": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the authentication secret for User, default is empty. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User is the rados user name, default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
                                    }
                                  }
                                }
                              },
                              "cinder": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a cinder volume attached and mounted on kubelets host machine. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write). More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    },
                                    "volume_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume ID used to identify the volume in Cinder. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
                                    }
                                  }
                                }
                              },
                              "config_map": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "ConfigMap represents a configMap that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                    }
                                  }
                                }
                              },
                              "downward_api": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "field_ref": {
                                            "Type": "List",
                                            "Required": true,
                                            "Description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "api_version": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "Default": {
                                                    "Type": "string",
                                                    "Value": "v1"
                                                  }
                                                },
                                                "field_path": {
                                                  "Type": "String",
                                                  "Optional": true,
                                                  "Description": "Path of the field to select in the specified API version"
                                                }
                                              }
                                            }
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Required": true,
                                            "Description": "Path is the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                                          },
                                          "resource_field_ref": {
                                            "Type": "List",
                                            "Optional": true,
                                            "Description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "MaxItems": 1,
                                            "Elem": {
                                              "Type": "SchemaInfo",
                                              "Info": {
                                                "container_name": {
                                                  "Type": "String",
                                                  "Required": true
                                                },
                                                "quantity": {
                                                  "Type": "String",
                                                  "Optional": true
                                                },
                                                "resource": {
                                                  "Type": "String",
                                                  "Required": true,
                                                  "Description": "Resource to select"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "empty_dir": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "medium": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                                      "Default": {
                                        "Type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "fc": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Required": true,
                                      "Description": "FC target lun number"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "target_ww_ns": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "FC target worldwide names (WWNs)",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "flex_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "driver": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Driver is the name of the driver to use for this volume."
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
                                    },
                                    "options": {
                                      "Type": "Map",
                                      "Optional": true,
                                      "Description": "Extra command options if any."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false (read/write)."
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "flocker": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "dataset_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated"
                                    },
                                    "dataset_uuid": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
                                    }
                                  }
                                }
                              },
                              "gce_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "partition": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "pd_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
                                    }
                                  }
                                }
                              },
                              "git_repo": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "GitRepo represents a git repository at a particular revision.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "directory": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Target directory name. Must not contain or start with '..'. If '.' is supplied, the volume directory will be the git repository. Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
                                    },
                                    "repository": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Repository URL"
                                    },
                                    "revision": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Commit hash for the specified revision."
                                    }
                                  }
                                }
                              },
                              "glusterfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "endpoints_name": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
                                    }
                                  }
                                }
                              },
                              "host_path": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
                                    }
                                  }
                                }
                              },
                              "iscsi": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
                                    },
                                    "iqn": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Target iSCSI Qualified Name."
                                    },
                                    "iscsi_interface": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "iSCSI interface name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "default"
                                      }
                                    },
                                    "lun": {
                                      "Type": "Int",
                                      "Optional": true,
                                      "Description": "iSCSI target lun number."
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false."
                                    },
                                    "target_portal": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
                                    }
                                  }
                                }
                              },
                              "local": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a mounted local storage device such as a disk, partition or directory. Local volumes can only be used as a statically created PersistentVolume. Dynamic provisioning is not supported yet. More info: http://kubernetes.io/docs/user-guide/volumes#local",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#local"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "Type": "String",
                                "Optional": true,
                                "Description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                              },
                              "nfs": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    },
                                    "server": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
                                    }
                                  }
                                }
                              },
                              "persistent_volume_claim": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "The specification of a persistent volume.",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "claim_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "ClaimName is the name of a PersistentVolumeClaim in the same "
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Will force the ReadOnly setting in VolumeMounts.",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    }
                                  }
                                }
                              },
                              "photon_persistent_disk": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "pd_id": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "ID that identifies Photon Controller persistent disk"
                                    }
                                  }
                                }
                              },
                              "quobyte": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "group": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Group to map volume access to Default is no group"
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
                                    },
                                    "registry": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
                                    },
                                    "user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "User to map volume access to Defaults to serivceaccount user"
                                    },
                                    "volume": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Volume is a string that references an already created Quobyte volume by name."
                                    }
                                  }
                                }
                              },
                              "rbd": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "ceph_monitors": {
                                      "Type": "Set",
                                      "Required": true,
                                      "Description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    },
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
                                    },
                                    "keyring": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Computed": true
                                    },
                                    "rados_user": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "admin"
                                      }
                                    },
                                    "rbd_image": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
                                    },
                                    "rbd_pool": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "rbd"
                                      }
                                    },
                                    "read_only": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Whether to force the read-only setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "Default": {
                                        "Type": "bool",
                                        "Value": "false"
                                      }
                                    },
                                    "secret_ref": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "Name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                                      "MaxItems": 1,
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "name": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "secret": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Secret represents a secret that should populate this volume. More info: http://kubernetes.io/docs/user-guide/volumes#secrets",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "default_mode": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                      "Default": {
                                        "Type": "string",
                                        "Value": "0644"
                                      }
                                    },
                                    "items": {
                                      "Type": "List",
                                      "Optional": true,
                                      "Description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                      "Elem": {
                                        "Type": "SchemaInfo",
                                        "Info": {
                                          "key": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The key to project."
                                          },
                                          "mode": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
                                          },
                                          "path": {
                                            "Type": "String",
                                            "Optional": true,
                                            "Description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'."
                                          }
                                        }
                                      }
                                    },
                                    "optional": {
                                      "Type": "Bool",
                                      "Optional": true,
                                      "Description": "Optional: Specify whether the Secret or it's keys must be defined."
                                    },
                                    "secret_name": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Name of the secret in the pod's namespace to use. More info: http://kubernetes.io/docs/user-guide/volumes#secrets"
                                    }
                                  }
                                }
                              },
                              "vsphere_volume": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "Represents a vSphere volume attached and mounted on kubelets host machine",
                                "MaxItems": 1,
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "fs_type": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                                    },
                                    "volume_path": {
                                      "Type": "String",
                                      "Required": true,
                                      "Description": "Path that identifies vSphere volume vmdk"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "update_strategy": {
              "Type": "List",
              "Optional": true,
              "Description": "The strategy that the StatefulSet controller will use to perform updates.",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "rolling_update": {
                    "Type": "List",
                    "Optional": true,
                    "Description": "RollingUpdate strategy type for StatefulSet",
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "partition": {
                          "Type": "Int",
                          "Optional": true,
                          "Description": "Indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.",
                          "Default": {
                            "Type": "int",
                            "Value": "0"
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "Type": "String",
                    "Optional": true,
                    "Description": "Indicates the type of the StatefulSet update strategy. Default is RollingUpdate",
                    "Default": {
                      "Type": "string",
                      "Value": "RollingUpdate"
                    }
                  }
                }
              }
            },
            "volume_claim_template": {
              "Type": "List",
              "Optional": true,
              "Description": "A list of claims that pods are allowed to reference. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template.",
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "metadata": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Standard persistent volume claim's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "annotations": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "An unstructured key value map stored with the persistent volume claim that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "generate_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
                          "ConflictsWith": [
                            "metadata.name"
                          ]
                        },
                        "generation": {
                          "Type": "Int",
                          "Description": "A sequence number representing a specific generation of the desired state.",
                          "Computed": true
                        },
                        "labels": {
                          "Type": "Map",
                          "Optional": true,
                          "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the persistent volume claim. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the persistent volume claim, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                          "Computed": true,
                          "ConflictsWith": [
                            "metadata.generate_name"
                          ]
                        },
                        "namespace": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Namespace defines the space within which name of the persistent volume claim must be unique.",
                          "Default": {
                            "Type": "string",
                            "Value": "default"
                          }
                        },
                        "resource_version": {
                          "Type": "String",
                          "Description": "An opaque value that represents the internal version of this persistent volume claim that can be used by clients to determine when persistent volume claim has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                          "Computed": true
                        },
                        "self_link": {
                          "Type": "String",
                          "Description": "A URL representing this persistent volume claim.",
                          "Computed": true
                        },
                        "uid": {
                          "Type": "String",
                          "Description": "The unique in time and space value for this persistent volume claim. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                          "Computed": true
                        }
                      }
                    }
                  },
                  "spec": {
                    "Type": "List",
                    "Required": true,
                    "Description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#persistentvolumeclaims",
                    "MaxItems": 1,
                    "Elem": {
                      "Type": "SchemaInfo",
                      "Info": {
                        "access_modes": {
                          "Type": "Set",
                          "Required": true,
                          "Description": "A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1",
                          "Elem": {
                            "Type": "SchemaElements",
                            "ElementsType": "String"
                          }
                        },
                        "resources": {
                          "Type": "List",
                          "Required": true,
                          "Description": "A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "limits": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                              },
                              "requests": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/"
                              }
                            }
                          }
                        },
                        "selector": {
                          "Type": "List",
                          "Optional": true,
                          "Description": "A label query over volumes to consider for binding.",
                          "MaxItems": 1,
                          "Elem": {
                            "Type": "SchemaInfo",
                            "Info": {
                              "match_expressions": {
                                "Type": "List",
                                "Optional": true,
                                "Description": "A list of label selector requirements. The requirements are ANDed.",
                                "Elem": {
                                  "Type": "SchemaInfo",
                                  "Info": {
                                    "key": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "The label key that the selector applies to."
                                    },
                                    "operator": {
                                      "Type": "String",
                                      "Optional": true,
                                      "Description": "A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`."
                                    },
                                    "values": {
                                      "Type": "Set",
                                      "Optional": true,
                                      "Description": "An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "Elem": {
                                        "Type": "SchemaElements",
                                        "ElementsType": "String"
                                      }
                                    }
                                  }
                                }
                              },
                              "match_labels": {
                                "Type": "Map",
                                "Optional": true,
                                "Description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                              }
                            }
                          }
                        },
                        "storage_class_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "Name of the storage class requested by the claim",
                          "Computed": true
                        },
                        "volume_name": {
                          "Type": "String",
                          "Optional": true,
                          "Description": "The binding reference to the PersistentVolume backing this claim.",
                          "Computed": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "kubernetes_storage_class": {
      "allow_volume_expansion": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Indicates whether the storage class allow volume expand",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard storage class's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the storage class that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generate_name": {
              "Type": "String",
              "Optional": true,
              "Description": "Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#idempotency",
              "ConflictsWith": [
                "metadata.0.name"
              ]
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the storage class. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the storage class, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true,
              "ConflictsWith": [
                "metadata.0.generate_name"
              ]
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this storage class that can be used by clients to determine when storage class has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this storage class.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this storage class. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "parameters": {
        "Type": "Map",
        "Optional": true,
        "Description": "The parameters for the provisioner that should create volumes of this storage class"
      },
      "reclaim_policy": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates the type of the reclaim policy",
        "Default": {
          "Type": "string",
          "Value": "Delete"
        }
      },
      "storage_provisioner": {
        "Type": "String",
        "Required": true,
        "Description": "Indicates the type of the provisioner"
      },
      "volume_binding_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "Indicates when volume binding and dynamic provisioning should occur",
        "Default": {
          "Type": "string",
          "Value": "Immediate"
        }
      }
    }
  },
  "data-sources": {
    "kubernetes_secret": {
      "data": {
        "Type": "Map",
        "Description": "A map of the secret data.",
        "Computed": true
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard secret's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the secret that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the secret. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the secret, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the secret must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this secret that can be used by clients to determine when secret has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this secret.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this secret. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "type": {
        "Type": "String",
        "Description": "Type of secret",
        "Computed": true
      }
    },
    "kubernetes_service": {
      "load_balancer_ingress": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "hostname": {
              "Type": "String",
              "Computed": true
            },
            "ip": {
              "Type": "String",
              "Computed": true
            }
          }
        }
      },
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard service's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the service that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the service. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the service, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "namespace": {
              "Type": "String",
              "Optional": true,
              "Description": "Namespace defines the space within which name of the service must be unique.",
              "Default": {
                "Type": "string",
                "Value": "default"
              }
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this service that can be used by clients to determine when service has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this service.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this service. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "spec": {
        "Type": "List",
        "Description": "Spec defines the behavior of a service. https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status",
        "Computed": true,
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cluster_ip": {
              "Type": "String",
              "Description": "The IP address of the service. It is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. `None` can be specified for headless services when proxying is not required. Ignored if type is `ExternalName`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "Computed": true
            },
            "external_ips": {
              "Type": "Set",
              "Description": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "external_name": {
              "Type": "String",
              "Description": "The external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid DNS name and requires `type` to be `ExternalName`.",
              "Computed": true
            },
            "load_balancer_ip": {
              "Type": "String",
              "Description": "Only applies to `type = LoadBalancer`. LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying this field when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
              "Computed": true
            },
            "load_balancer_source_ranges": {
              "Type": "Set",
              "Description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature. More info: http://kubernetes.io/docs/user-guide/services-firewalls",
              "Computed": true,
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "port": {
              "Type": "List",
              "Description": "The list of ports that are exposed by this service. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "Computed": true,
              "MinItems": 1,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "name": {
                    "Type": "String",
                    "Description": "The name of this port within the service. All ports within the service must have unique names. Optional if only one ServicePort is defined on this service.",
                    "Computed": true
                  },
                  "node_port": {
                    "Type": "Int",
                    "Description": "The port on each node on which this service is exposed when `type` is `NodePort` or `LoadBalancer`. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the `type` of this service requires one. More info: http://kubernetes.io/docs/user-guide/services#type--nodeport",
                    "Computed": true
                  },
                  "port": {
                    "Type": "Int",
                    "Description": "The port that will be exposed by this service.",
                    "Computed": true
                  },
                  "protocol": {
                    "Type": "String",
                    "Description": "The IP protocol for this port. Supports `TCP` and `UDP`. Default is `TCP`.",
                    "Computed": true
                  },
                  "target_port": {
                    "Type": "String",
                    "Description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. This field is ignored for services with `cluster_ip = \"None\"`. More info: http://kubernetes.io/docs/user-guide/services#defining-a-service",
                    "Computed": true
                  }
                }
              }
            },
            "publish_not_ready_addresses": {
              "Type": "Bool",
              "Optional": true,
              "Description": "When set to true, indicates that DNS implementations must publish the `notReadyAddresses` of subsets for the Endpoints associated with the Service. The default value is `false`. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate `SRV` records for its Pods without respect to their readiness for purpose of peer discovery.",
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "selector": {
              "Type": "Map",
              "Description": "Route service traffic to pods with label keys and values matching this selector. Only applies to types `ClusterIP`, `NodePort`, and `LoadBalancer`. More info: http://kubernetes.io/docs/user-guide/services#overview",
              "Computed": true
            },
            "session_affinity": {
              "Type": "String",
              "Description": "Used to maintain session affinity. Supports `ClientIP` and `None`. Defaults to `None`. More info: http://kubernetes.io/docs/user-guide/services#virtual-ips-and-service-proxies",
              "Computed": true
            },
            "type": {
              "Type": "String",
              "Description": "Determines how the service is exposed. Defaults to `ClusterIP`. Valid options are `ExternalName`, `ClusterIP`, `NodePort`, and `LoadBalancer`. `ExternalName` maps to the specified `external_name`. More info: http://kubernetes.io/docs/user-guide/services#overview",
              "Computed": true
            }
          }
        }
      }
    },
    "kubernetes_storage_class": {
      "metadata": {
        "Type": "List",
        "Required": true,
        "Description": "Standard storage class's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#metadata",
        "MaxItems": 1,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "annotations": {
              "Type": "Map",
              "Optional": true,
              "Description": "An unstructured key value map stored with the storage class that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "generation": {
              "Type": "Int",
              "Description": "A sequence number representing a specific generation of the desired state.",
              "Computed": true
            },
            "labels": {
              "Type": "Map",
              "Optional": true,
              "Description": "Map of string keys and values that can be used to organize and categorize (scope and select) the storage class. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
              "Elem": {
                "Type": "SchemaElements",
                "ElementsType": "String"
              }
            },
            "name": {
              "Type": "String",
              "Optional": true,
              "Description": "Name of the storage class, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "Computed": true
            },
            "resource_version": {
              "Type": "String",
              "Description": "An opaque value that represents the internal version of this storage class that can be used by clients to determine when storage class has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "Computed": true
            },
            "self_link": {
              "Type": "String",
              "Description": "A URL representing this storage class.",
              "Computed": true
            },
            "uid": {
              "Type": "String",
              "Description": "The unique in time and space value for this storage class. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
              "Computed": true
            }
          }
        }
      },
      "parameters": {
        "Type": "Map",
        "Description": "The parameters for the provisioner that should create volumes of this storage class",
        "Computed": true
      },
      "reclaim_policy": {
        "Type": "String",
        "Description": "Indicates the type of the reclaim policy",
        "Computed": true
      },
      "storage_provisioner": {
        "Type": "String",
        "Description": "Indicates the type of the provisioner",
        "Computed": true
      }
    }
  }
}