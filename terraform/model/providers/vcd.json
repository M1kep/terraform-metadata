{
  ".schema_version": "1",
  "name": "vcd",
  "type": "provider",
  "version": "v2.4.0",
  "provider": {
    "allow_unverified_ssl": {
      "Type": "Bool",
      "Optional": true,
      "Description": "If set, VCDClient will permit unverifiable SSL certificates.",
      "DefaultFunc": "ENV(VCD_ALLOW_UNVERIFIED_SSL)"
    },
    "logging": {
      "Type": "Bool",
      "Optional": true,
      "Description": "If set, it will enable logging of API requests and responses",
      "DefaultFunc": "ENV(VCD_API_LOGGING)"
    },
    "logging_file": {
      "Type": "String",
      "Optional": true,
      "Description": "Defines the full name of the logging file for API calls (requires 'logging')",
      "DefaultFunc": "ENV(VCD_API_LOGGING_FILE)"
    },
    "max_retry_timeout": {
      "Type": "Int",
      "Optional": true,
      "Description": "Max num seconds to wait for successful response when operating on resources within vCloud (defaults to 60)",
      "DefaultFunc": "ENV(VCD_MAX_RETRY_TIMEOUT)"
    },
    "org": {
      "Type": "String",
      "Required": true,
      "Description": "The VCD Org for API operations",
      "DefaultFunc": "ENV(VCD_ORG)"
    },
    "password": {
      "Type": "String",
      "Required": true,
      "Description": "The user password for VCD API operations.",
      "DefaultFunc": "ENV(VCD_PASSWORD)"
    },
    "sysorg": {
      "Type": "String",
      "Optional": true,
      "Description": "The VCD Org for user authentication",
      "DefaultFunc": "ENV(VCD_SYS_ORG)"
    },
    "url": {
      "Type": "String",
      "Required": true,
      "Description": "The VCD url for VCD API operations.",
      "DefaultFunc": "ENV(VCD_URL)"
    },
    "user": {
      "Type": "String",
      "Required": true,
      "Description": "The user name for VCD API operations.",
      "DefaultFunc": "ENV(VCD_USER)"
    },
    "vdc": {
      "Type": "String",
      "Optional": true,
      "Description": "The VDC for API operations",
      "DefaultFunc": "ENV(VCD_VDC)"
    }
  },
  "resources": {
    "vcd_catalog": {
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that normally allows removal."
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_catalog_item": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where upload the OVA file"
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "catalog item name"
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "ova_path": {
        "Type": "String",
        "Required": true,
        "Description": "absolute or relative path to OVA"
      },
      "show_upload_progress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "shows upload progress in stdout"
      },
      "upload_piece_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "size of upload file piece size in mega bytes",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      }
    },
    "vcd_catalog_media": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where upload the Media file"
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "media_path": {
        "Type": "String",
        "Required": true,
        "Description": "absolute or relative path to Media file"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "media name"
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "show_upload_progress": {
        "Type": "Bool",
        "Optional": true,
        "Description": "shows upload progress in stdout"
      },
      "upload_piece_size": {
        "Type": "Int",
        "Optional": true,
        "Description": "size of upload file piece size in mega bytes",
        "Default": {
          "Type": "int",
          "Value": "1"
        }
      }
    },
    "vcd_dnat": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "external_ip": {
        "Type": "String",
        "Required": true
      },
      "icmp_sub_type": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "internal_ip": {
        "Type": "String",
        "Required": true
      },
      "network_name": {
        "Type": "String",
        "Optional": true
      },
      "network_type": {
        "Type": "String",
        "Optional": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "port": {
        "Type": "Int",
        "Optional": true,
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "tcp"
        }
      },
      "translated_port": {
        "Type": "Int",
        "Optional": true,
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_edgegateway": {
      "advanced": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the gateway uses advanced networking. (Enabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "configuration": {
        "Type": "String",
        "Required": true,
        "Description": "Configuration of the vShield edge VM for this gateway. One of: compact, full (\"Large\"), full4 (\"Quad Large\"), x-large"
      },
      "default_gateway_network": {
        "Type": "String",
        "Optional": true,
        "Description": "External network to be used as default gateway. Its name must be included in 'external_networks'. An empty value will skip the default gateway",
        "Default": {
          "Type": "string"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "distributed_routing": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If advanced networking enabled, also enable distributed routing",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "external_networks": {
        "Type": "List",
        "Required": true,
        "Description": "A list of external networks to be used by the edge gateway",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "ha_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable high availability on this edge gateway",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_acceleration_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer acceleration. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancing. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_logging_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable load balancer logging. (Disabled by default)",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "lb_loglevel": {
        "Type": "String",
        "Optional": true,
        "Description": "Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)",
        "Default": {
          "Type": "string",
          "Value": "info"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_edgegateway_vpn": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "encryption_protocol": {
        "Type": "String",
        "Required": true
      },
      "local_id": {
        "Type": "String",
        "Required": true
      },
      "local_ip_address": {
        "Type": "String",
        "Required": true
      },
      "local_subnets": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "local_subnet_gateway": {
              "Type": "String",
              "Required": true
            },
            "local_subnet_mask": {
              "Type": "String",
              "Required": true
            },
            "local_subnet_name": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "mtu": {
        "Type": "Int",
        "Required": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "peer_id": {
        "Type": "String",
        "Required": true
      },
      "peer_ip_address": {
        "Type": "String",
        "Required": true
      },
      "peer_subnets": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "peer_subnet_gateway": {
              "Type": "String",
              "Required": true
            },
            "peer_subnet_mask": {
              "Type": "String",
              "Required": true
            },
            "peer_subnet_name": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "shared_secret": {
        "Type": "String",
        "Required": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_external_network": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "ip_scope": {
        "Type": "List",
        "Required": true,
        "Description": "A list of IP scopes for the network",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "dns1": {
              "Type": "String",
              "Optional": true,
              "Description": "Primary DNS server"
            },
            "dns2": {
              "Type": "String",
              "Optional": true,
              "Description": "Secondary DNS server"
            },
            "dns_suffix": {
              "Type": "String",
              "Optional": true,
              "Description": "Dns suffix"
            },
            "gateway": {
              "Type": "String",
              "Required": true,
              "Description": "Gateway of the network"
            },
            "netmask": {
              "Type": "String",
              "Required": true,
              "Description": "Network mask"
            },
            "static_ip_pool": {
              "Type": "List",
              "Optional": true,
              "Description": "IP ranges used for static pool allocation in the network",
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "end_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "End address of the IP range"
                  },
                  "start_address": {
                    "Type": "String",
                    "Required": true,
                    "Description": "Start address of the IP range"
                  }
                }
              }
            }
          }
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "retain_net_info_across_deployments": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "vsphere_network": {
        "Type": "List",
        "Required": true,
        "Description": "A list of port groups that back this network. Each referenced DV_PORTGROUP or NETWORK must exist on a vCenter server registered with the system.",
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "The name of the port group"
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "The vSphere port group type. One of: DV_PORTGROUP (distributed virtual port group), NETWORK"
            },
            "vcenter": {
              "Type": "String",
              "Required": true,
              "Description": "The vCenter server name"
            }
          }
        }
      }
    },
    "vcd_firewall_rules": {
      "default_action": {
        "Type": "String",
        "Required": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "rule": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "description": {
              "Type": "String",
              "Required": true
            },
            "destination_ip": {
              "Type": "String",
              "Required": true
            },
            "destination_port": {
              "Type": "String",
              "Required": true
            },
            "id": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "policy": {
              "Type": "String",
              "Required": true
            },
            "protocol": {
              "Type": "String",
              "Required": true
            },
            "source_ip": {
              "Type": "String",
              "Required": true
            },
            "source_port": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_independent_disk": {
      "bus_sub_type": {
        "Type": "String",
        "Optional": true
      },
      "bus_type": {
        "Type": "String",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "size": {
        "Type": "Float",
        "Required": true,
        "Description": "size in MB"
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_inserted_media": {
      "catalog": {
        "Type": "String",
        "Required": true,
        "Description": "catalog name where to find media file"
      },
      "eject_force": {
        "Type": "Bool",
        "Optional": true,
        "Description": "When ejecting answers automatically to question yes",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "media name to use"
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "vapp_name": {
        "Type": "String",
        "Required": true,
        "Description": "vApp to use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      },
      "vm_name": {
        "Type": "String",
        "Required": true,
        "Description": "VM in vApp in which media will be inserted or ejected"
      }
    },
    "vcd_lb_app_profile": {
      "cookie_mode": {
        "Type": "String",
        "Optional": true,
        "Description": "The mode by which the cookie should be inserted. One of 'insert', 'prefix', or 'appsession'"
      },
      "cookie_name": {
        "Type": "String",
        "Optional": true,
        "Description": "Used to uniquely identify the session the first time a client accesses the site. The load balancer refers to this cookie when connecting subsequent requests in the session, so that they all go to the same virtual server. Only applies for persistence_mechanism 'cookie'"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Profile is located"
      },
      "enable_pool_side_ssl": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable to define the certificate, CAs, or CRLs used to authenticate the load balancer from the server side",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "enable_ssl_passthrough": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address."
      },
      "expiration": {
        "Type": "Int",
        "Optional": true,
        "Description": "Length of time in seconds that persistence stays in effect"
      },
      "http_redirect_url": {
        "Type": "String",
        "Optional": true,
        "Description": "The URL to which traffic that arrives at the destination address should be redirected. Only applies for types 'http' and 'https'"
      },
      "insert_x_forwarded_http_header": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enables 'X-Forwarded-For' header for identifying the originating IP address of a client connecting to a Web server through the load balancer. Only applies for types HTTP and HTTPS",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Application Profile name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Application Profile is located"
      },
      "persistence_mechanism": {
        "Type": "String",
        "Optional": true,
        "Description": "Persistence mechanism for the profile. One of 'cookie', 'ssl-sessionid', 'sourceip'"
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Protocol type used to send requests to the server. One of 'tcp', 'udp', 'http' org 'https'"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Application Profile is located"
      }
    },
    "vcd_lb_app_rule": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Rule is located"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Application Rule name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Application Rule is located"
      },
      "script": {
        "Type": "String",
        "Required": true,
        "Description": "The script for the application rule. Note - you may find HEREDOC useful to pass multiline strings"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Application Rule is located"
      }
    },
    "vcd_lb_server_pool": {
      "algorithm": {
        "Type": "String",
        "Required": true,
        "Description": "Balancing method for the service. One of 'ip-hash', 'round-robin', 'uri', 'leastconn', 'url', or 'httpheader'"
      },
      "algorithm_parameters": {
        "Type": "String",
        "Optional": true,
        "Description": "Additional options for load balancing algorithm for httpheader or url algorithms"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Server pool description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Server Pool is located"
      },
      "enable_transparency": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Makes client IP addresses visible to the backend servers",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "member": {
        "Type": "List",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "condition": {
              "Type": "String",
              "Required": true,
              "Description": "Defines member state. One of enabled, drain, disabled."
            },
            "id": {
              "Type": "String",
              "Description": "Pool member id (formatted as member-xx, where xx is a number)",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Required": true,
              "Description": "IP address of member in server pool"
            },
            "max_connections": {
              "Type": "Int",
              "Optional": true,
              "Description": "The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released"
            },
            "min_connections": {
              "Type": "Int",
              "Optional": true,
              "Description": "Minimum number of concurrent connections a member must always accept"
            },
            "monitor_port": {
              "Type": "Int",
              "Required": true,
              "Description": "Port at which the member is to receive health monitor requests. Can be the same as port"
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of pool member"
            },
            "port": {
              "Type": "Int",
              "Required": true,
              "Description": "Port at which the member is to receive traffic from the load balancer"
            },
            "weight": {
              "Type": "Int",
              "Required": true,
              "Description": "Proportion of traffic this member is to handle. Must be an integer in the range 1-256"
            }
          }
        }
      },
      "monitor_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Load Balancer Service Monitor ID"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Server Pool name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Server Pool is located"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Server Pool is located"
      }
    },
    "vcd_lb_service_monitor": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Service Monitor is located"
      },
      "expected": {
        "Type": "String",
        "Optional": true,
        "Description": "String that the monitor expects to match in the status line of the http or https response (for example, HTTP/1.1)"
      },
      "extension": {
        "Type": "Map",
        "Optional": true,
        "Description": "Advanced monitor parameters as key=value pairs"
      },
      "interval": {
        "Type": "Int",
        "Optional": true,
        "Description": "Interval in seconds at which a server is to be monitored (defaults to 10)",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "max_retries": {
        "Type": "Int",
        "Optional": true,
        "Description": "Number of times the specified monitoring Method must fail sequentially before the server is declared down  (defaults to 3)",
        "Default": {
          "Type": "int",
          "Value": "3"
        }
      },
      "method": {
        "Type": "String",
        "Optional": true,
        "Description": "Method to be used to detect server status. One of OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, or CONNECT"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique LB Service Monitor name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Service Monitor is located"
      },
      "receive": {
        "Type": "String",
        "Optional": true,
        "Description": "String to be matched in the response content"
      },
      "send": {
        "Type": "String",
        "Optional": true,
        "Description": "Data to be sent"
      },
      "timeout": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum time in seconds within which a response from the server must be received  (defaults to 15)",
        "Default": {
          "Type": "int",
          "Value": "15"
        }
      },
      "type": {
        "Type": "String",
        "Required": true,
        "Description": "Way in which you want to send the health check request to the server. One of http, https, tcp, icmp, or udp"
      },
      "url": {
        "Type": "String",
        "Optional": true,
        "Description": "URL to be used in the server status request"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Service Monitor is located"
      }
    },
    "vcd_lb_virtual_server": {
      "app_profile_id": {
        "Type": "String",
        "Optional": true,
        "Description": "Application profile ID to be associated with the virtual server"
      },
      "app_rule_ids": {
        "Type": "List",
        "Optional": true,
        "Description": "List of attached application rule IDs",
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum concurrent connections that the virtual server can process"
      },
      "connection_rate_limit": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum incoming new connection requests per second"
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "Virtual Server description"
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Virtual Server is located"
      },
      "enable_acceleration": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Enable virtual server acceleration"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Defines if the virtual server is enabled",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "ip_address": {
        "Type": "String",
        "Required": true,
        "Description": "IP address that the load balancer listens on"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Unique Virtual Server name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Virtual Server is located"
      },
      "port": {
        "Type": "Int",
        "Required": true,
        "Description": "Port number that the load balancer listens on"
      },
      "protocol": {
        "Type": "String",
        "Required": true,
        "Description": "Protocol that the virtual server accepts"
      },
      "server_pool_id": {
        "Type": "String",
        "Optional": true,
        "Description": "The server pool that the load balancer will use"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Virtual Server is located"
      }
    },
    "vcd_network": {
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.8.8"
        }
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.4.4"
        }
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "gateway": {
        "Type": "String",
        "Optional": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_network_direct": {
      "external_network": {
        "Type": "String",
        "Required": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_network_isolated": {
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.8.8"
        }
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.4.4"
        }
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true
      },
      "gateway": {
        "Type": "String",
        "Optional": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_network_routed": {
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.8.8"
        }
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.4.4"
        }
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "gateway": {
        "Type": "String",
        "Optional": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "shared": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_org": {
      "can_publish_catalogs": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this organization is allowed to share catalogs.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "delay_after_power_on_seconds": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies this organization's default for virtual machine boot delay after power on."
      },
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True with delete_recursive=True to remove an org and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the org and any objects it contains that are in a state that normally allows removal."
      },
      "deployed_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual machines that can be deployed simultaneously by a member of this organization.",
        "Default": {
          "Type": "int",
          "Value": "-1"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "full_name": {
        "Type": "String",
        "Required": true
      },
      "is_enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this organization is enabled (allows login and all other operations).",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual machines in vApps or vApp templates that can be stored in an undeployed state by a member of this organization.",
        "Default": {
          "Type": "int",
          "Value": "-1"
        }
      }
    },
    "vcd_org_user": {
      "deployed_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Quota of vApps that this user can deploy. A value of 0 specifies an unlimited quota.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "description": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's description"
      },
      "email_address": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's email address"
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if the user is enabled and can log in.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "full_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's full name"
      },
      "instant_messaging": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's telephone"
      },
      "is_group_role": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this user has a group role.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "is_locked": {
        "Type": "Bool",
        "Optional": true,
        "Description": "If the user account has been locked due to too many invalid login attempts, the value will change to true (only the system can lock the user). To unlock the user re-set this flag to false."
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "User's name. Only lowercase letters allowed. Cannot be changed after creation"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "Organization this user belongs to"
      },
      "password": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's password. This value is never returned on read. Either \"password\" or \"password_file\" must be included on creation.",
        "ConflictsWith": [
          "password_file"
        ]
      },
      "password_file": {
        "Type": "String",
        "Optional": true,
        "Description": "Name of a file containing the user's password. Either \"password_file\" or \"password\" must be included on creation.",
        "ConflictsWith": [
          "password"
        ]
      },
      "provider_type": {
        "Type": "String",
        "Optional": true,
        "Description": "Identity provider type for this this user. One of: 'INTEGRATED', 'SAML', 'OAUTH'. When empty, the default value 'INTEGRATED' is used.",
        "Default": {
          "Type": "string",
          "Value": "INTEGRATED"
        }
      },
      "role": {
        "Type": "String",
        "Required": true,
        "Description": "Role within the organization"
      },
      "stored_vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Quota of vApps that this user can store. A value of 0 specifies an unlimited quota.",
        "Default": {
          "Type": "int",
          "Value": "10"
        }
      },
      "take_ownership": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Take ownership of user's objects on deletion.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "telephone": {
        "Type": "String",
        "Optional": true,
        "Description": "The user's telephone"
      }
    },
    "vcd_org_vdc": {
      "allocation_model": {
        "Type": "String",
        "Required": true,
        "Description": "The allocation model used by this VDC; must be one of {AllocationVApp, AllocationPool, ReservationPool}"
      },
      "allow_over_commit": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Set to false to disallow creation of the VDC if the AllocationModel is AllocationPool or ReservationPool and the ComputeCapacity you specified is greater than what the backing Provider VDC can supply. Default is true.",
        "Computed": true
      },
      "compute_capacity": {
        "Type": "Set",
        "Required": true,
        "Description": "The compute capacity allocated to this VDC.",
        "MaxItems": 1,
        "MinItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "cpu": {
              "Type": "Set",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "overhead": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            },
            "memory": {
              "Type": "Set",
              "Required": true,
              "MaxItems": 1,
              "MinItems": 1,
              "IsBlock": true,
              "Elem": {
                "Type": "SchemaInfo",
                "Info": {
                  "allocated": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity that is committed to be available. Value in MB or MHz. Used with AllocationPool (Allocation pool) and ReservationPool (Reservation pool).",
                    "Computed": true
                  },
                  "limit": {
                    "Type": "Int",
                    "Optional": true,
                    "Description": "Capacity limit relative to the value specified for Allocation. It must not be less than that value. If it is greater than that value, it implies over provisioning. A value of 0 specifies unlimited units. Value in MB or MHz. Used with AllocationVApp (Pay as you go).",
                    "Computed": true
                  },
                  "overhead": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "reserved": {
                    "Type": "Int",
                    "Computed": true
                  },
                  "used": {
                    "Type": "Int",
                    "Computed": true
                  }
                }
              }
            }
          }
        }
      },
      "cpu_guaranteed": {
        "Type": "Float",
        "Optional": true,
        "Description": "Percentage of allocated CPU resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. If the element is empty, vCD sets a value",
        "Computed": true
      },
      "cpu_speed": {
        "Type": "Int",
        "Optional": true,
        "Description": "Specifies the clock frequency, in Megahertz, for any virtual CPU that is allocated to a VM. A VM with 2 vCPUs will consume twice as much of this value. Ignored for ReservationPool. Required when AllocationModel is AllocationVApp or AllocationPool, and may not be less than 256 MHz. Defaults to 1000 MHz if the element is empty or missing.",
        "Computed": true
      },
      "delete_force": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_force=True to remove a vdc and any objects it contains, regardless of their state."
      },
      "delete_recursive": {
        "Type": "Bool",
        "Required": true,
        "Description": "When destroying use delete_recursive=True to remove the vdc and any objects it contains that are in a state that normally allows removal."
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "enable_fast_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Request for fast provisioning. Request will be honored only if the underlying datas tore supports it. Fast provisioning can reduce the time it takes to create virtual machines by using vSphere linked clones. If you disable fast provisioning, all provisioning operations will result in full clones."
      },
      "enable_thin_provisioning": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Boolean to request thin provisioning. Request will be honored only if the underlying datastore supports it. Thin provisioning saves storage space by committing it on demand. This allows over-allocation of storage."
      },
      "enable_vm_discovery": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if discovery of vCenter VMs is enabled for resource pools backing this VDC. If left unspecified, the actual behaviour depends on enablement at the organization level and at the system level."
      },
      "enabled": {
        "Type": "Bool",
        "Optional": true,
        "Description": "True if this VDC is enabled for use by the organization VDCs. Default is true.",
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "memory_guaranteed": {
        "Type": "Float",
        "Optional": true,
        "Description": "Percentage of allocated memory resources guaranteed to vApps deployed in this VDC. For example, if this value is 0.75, then 75% of allocated resources are guaranteed. Required when AllocationModel is AllocationVApp or AllocationPool. When Allocation model is AllocationPool minimum value is 0.2. If the element is empty, vCD sets a value.",
        "Computed": true
      },
      "metadata": {
        "Type": "Map",
        "Optional": true,
        "Description": "Key and value pairs for Org VDC metadata"
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network_pool_name": {
        "Type": "String",
        "Optional": true,
        "Description": "The name of a network pool in the Provider VDC. Required if this VDC will contain routed or isolated networks."
      },
      "network_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of network objects that can be deployed in this VDC. Defaults to 0, which means no networks can be deployed."
      },
      "nic_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "Maximum number of virtual NICs allowed in this VDC. Defaults to 0, which specifies an unlimited number."
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "Organization to create the VDC in"
      },
      "provider_vdc_name": {
        "Type": "String",
        "Required": true,
        "Description": "A reference to the Provider VDC from which this organization VDC is provisioned."
      },
      "storage_profile": {
        "Type": "List",
        "Required": true,
        "Description": "Storage profiles supported by this VDC.",
        "MinItems": 1,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default": {
              "Type": "Bool",
              "Required": true,
              "Description": "True if this is default storage profile for this VDC. The default storage profile is used when an object that can specify a storage profile is created with no storage profile specified."
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Description": "True if this storage profile is enabled for use in the VDC.",
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "limit": {
              "Type": "Int",
              "Required": true,
              "Description": "Maximum number of MB allocated for this storage profile. A value of 0 specifies unlimited MB."
            },
            "name": {
              "Type": "String",
              "Required": true,
              "Description": "Name of Provider VDC storage profile."
            }
          }
        }
      },
      "vm_quota": {
        "Type": "Int",
        "Optional": true,
        "Description": "The maximum number of VMs that can be created in this VDC. Includes deployed and undeployed VMs in vApps and vApp templates. Defaults to 0, which specifies an unlimited number."
      }
    },
    "vcd_snat": {
      "description": {
        "Type": "String",
        "Optional": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true
      },
      "external_ip": {
        "Type": "String",
        "Required": true
      },
      "internal_ip": {
        "Type": "String",
        "Required": true
      },
      "network_name": {
        "Type": "String",
        "Optional": true
      },
      "network_type": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "ext"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_vapp": {
      "accept_all_eulas": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "catalog_name": {
        "Type": "String",
        "Optional": true
      },
      "cpus": {
        "Type": "Int",
        "Optional": true
      },
      "description": {
        "Type": "String",
        "Optional": true
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "initscript": {
        "Type": "String",
        "Optional": true
      },
      "ip": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "memory": {
        "Type": "Int",
        "Optional": true
      },
      "metadata": {
        "Type": "Map",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network_name": {
        "Type": "String",
        "Optional": true
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "ovf": {
        "Type": "Map",
        "Optional": true
      },
      "power_on": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "storage_profile": {
        "Type": "String",
        "Optional": true
      },
      "template_name": {
        "Type": "String",
        "Optional": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_vapp_network": {
      "dhcp_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "default_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "3600"
              }
            },
            "enabled": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "true"
              }
            },
            "end_address": {
              "Type": "String",
              "Optional": true
            },
            "max_lease_time": {
              "Type": "Int",
              "Optional": true,
              "Default": {
                "Type": "int",
                "Value": "7200"
              }
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "dns1": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.8.8"
        }
      },
      "dns2": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "8.8.4.4"
        }
      },
      "dns_suffix": {
        "Type": "String",
        "Optional": true
      },
      "gateway": {
        "Type": "String",
        "Required": true
      },
      "guest_vlan_allowed": {
        "Type": "Bool",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "netmask": {
        "Type": "String",
        "Optional": true,
        "Default": {
          "Type": "string",
          "Value": "255.255.255.0"
        }
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "static_ip_pool": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "end_address": {
              "Type": "String",
              "Required": true
            },
            "start_address": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "vapp_name": {
        "Type": "String",
        "Required": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    },
    "vcd_vapp_vm": {
      "accept_all_eulas": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "catalog_name": {
        "Type": "String",
        "Required": true
      },
      "cpu_cores": {
        "Type": "Int",
        "Optional": true
      },
      "cpus": {
        "Type": "Int",
        "Optional": true
      },
      "disk": {
        "Type": "Set",
        "Optional": true,
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "bus_number": {
              "Type": "String",
              "Required": true
            },
            "name": {
              "Type": "String",
              "Required": true
            },
            "unit_number": {
              "Type": "String",
              "Required": true
            }
          }
        }
      },
      "expose_hardware_virtualization": {
        "Type": "Bool",
        "Optional": true,
        "Description": "Expose hardware-assisted CPU virtualization to guest OS.",
        "Default": {
          "Type": "bool",
          "Value": "false"
        }
      },
      "href": {
        "Type": "String",
        "Optional": true,
        "Computed": true
      },
      "initscript": {
        "Type": "String",
        "Optional": true
      },
      "ip": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "network"
        ],
        "Deprecated": "In favor of network"
      },
      "mac": {
        "Type": "String",
        "Optional": true,
        "Computed": true,
        "ConflictsWith": [
          "network"
        ],
        "Deprecated": "In favor of network"
      },
      "memory": {
        "Type": "Int",
        "Optional": true
      },
      "metadata": {
        "Type": "Map",
        "Optional": true
      },
      "name": {
        "Type": "String",
        "Required": true
      },
      "network": {
        "Type": "List",
        "Optional": true,
        "ConflictsWith": [
          "ip",
          "network_name",
          "vapp_network_name",
          "network_href"
        ],
        "IsBlock": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "ip": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "ip_allocation_mode": {
              "Type": "String",
              "Optional": true
            },
            "is_primary": {
              "Type": "Bool",
              "Optional": true,
              "Default": {
                "Type": "bool",
                "Value": "false"
              }
            },
            "mac": {
              "Type": "String",
              "Optional": true,
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Optional": true
            },
            "type": {
              "Type": "String",
              "Required": true,
              "Description": "Network type to use: 'vapp', 'org' or 'none'. Use 'vapp' for vApp network, 'org' to attach Org VDC network. 'none' for empty NIC."
            }
          }
        }
      },
      "network_href": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "network"
        ],
        "Deprecated": "In favor of network"
      },
      "network_name": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "network"
        ],
        "Deprecated": "In favor of network"
      },
      "org": {
        "Type": "String",
        "Optional": true
      },
      "power_on": {
        "Type": "Bool",
        "Optional": true,
        "Default": {
          "Type": "bool",
          "Value": "true"
        }
      },
      "template_name": {
        "Type": "String",
        "Required": true
      },
      "vapp_name": {
        "Type": "String",
        "Required": true
      },
      "vapp_network_name": {
        "Type": "String",
        "Optional": true,
        "ConflictsWith": [
          "network"
        ],
        "Deprecated": "In favor of network"
      },
      "vdc": {
        "Type": "String",
        "Optional": true
      }
    }
  },
  "data-sources": {
    "vcd_lb_app_profile": {
      "cookie_mode": {
        "Type": "String",
        "Description": "The mode by which the cookie should be inserted. One of 'insert', 'prefix', or 'appsession'",
        "Computed": true
      },
      "cookie_name": {
        "Type": "String",
        "Description": "Used to uniquely identify the session the first time a client accesses the site. The load balancer refers to this cookie when connecting subsequent requests in the session, so that they all go to the same virtual server. Only applies for persistence_mechanism 'cookie'",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Profile is located"
      },
      "enable_pool_side_ssl": {
        "Type": "Bool",
        "Description": "Enable to define the certificate, CAs, or CRLs used to authenticate the load balancer from the server side",
        "Computed": true
      },
      "enable_ssl_passthrough": {
        "Type": "Bool",
        "Description": "Enable SSL authentication to be passed through to the virtual server. Otherwise SSL authentication takes place at the destination address.",
        "Computed": true
      },
      "expiration": {
        "Type": "Int",
        "Description": "Length of time in seconds that persistence stays in effect",
        "Computed": true
      },
      "http_redirect_url": {
        "Type": "String",
        "Description": "The URL to which traffic that arrives at the destination address should be redirected. Only applies for types HTTP and HTTPS",
        "Computed": true
      },
      "insert_x_forwarded_http_header": {
        "Type": "Bool",
        "Description": "Enables 'X-Forwarded-For' header for identifying the originating IP address of a client connecting to a Web server through the load balancer. Only applies for types HTTP and HTTPS",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Application Profile name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Application Profile is located"
      },
      "persistence_mechanism": {
        "Type": "String",
        "Description": "Persistence mechanism for the profile. One of 'cookie', 'ssl-sessionid', 'sourceip'",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Protocol type used to send requests to the server. One of 'TCP', 'UDP', 'HTTP' org 'HTTPS'",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Application Profile is located"
      }
    },
    "vcd_lb_app_rule": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Application Rule is located"
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Application Rule name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Application Rule is located"
      },
      "script": {
        "Type": "String",
        "Description": "The script for the LB Application Rule. Each line will be terminated by newlines (\n)",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Application Rule is located"
      }
    },
    "vcd_lb_server_pool": {
      "algorithm": {
        "Type": "String",
        "Description": "Balancing method for the service",
        "Computed": true
      },
      "algorithm_parameters": {
        "Type": "String",
        "Description": "Additional options for load balancing algorithm for http-header or url algorithms",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Server pool description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Server Pool is located"
      },
      "enable_transparency": {
        "Type": "Bool",
        "Description": "Makes client IP addresses visible to the backend servers",
        "Computed": true
      },
      "member": {
        "Type": "List",
        "Computed": true,
        "Elem": {
          "Type": "SchemaInfo",
          "Info": {
            "condition": {
              "Type": "String",
              "Description": "Defines member state. One of enabled, drain, disabled.",
              "Computed": true
            },
            "id": {
              "Type": "String",
              "Description": "Pool member id (formatted as member-xx, where xx is a number)",
              "Computed": true
            },
            "ip_address": {
              "Type": "String",
              "Description": "IP address of member in server pool",
              "Computed": true
            },
            "max_connections": {
              "Type": "Int",
              "Description": "The maximum number of concurrent connections the member can handle. If exceeded requests are queued and the load balancer waits for a connection to be released",
              "Computed": true
            },
            "min_connections": {
              "Type": "Int",
              "Description": "Minimum number of concurrent connections a member must always accept",
              "Computed": true
            },
            "monitor_port": {
              "Type": "Int",
              "Description": "Port at which the member is to receive health monitor requests. Can be the same as port",
              "Computed": true
            },
            "name": {
              "Type": "String",
              "Description": "Name of pool member",
              "Computed": true
            },
            "port": {
              "Type": "Int",
              "Description": "Port at which the member is to receive traffic from the load balancer",
              "Computed": true
            },
            "weight": {
              "Type": "Int",
              "Description": "Proportion of traffic this member is to handle. Must be an integer in the range 1-256",
              "Computed": true
            }
          }
        }
      },
      "monitor_id": {
        "Type": "String",
        "Description": "Load Balancer Service Monitor ID",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Server Pool name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Server Pool is located"
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Server Pool is located"
      }
    },
    "vcd_lb_service_monitor": {
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the LB Service Monitor is located"
      },
      "expected": {
        "Type": "String",
        "Description": "String that the monitor expects to match in the status line of the http or https response (for example, HTTP/1.1)",
        "Computed": true
      },
      "extension": {
        "Type": "Map",
        "Description": "Advanced monitor parameters as key=value pairs",
        "Computed": true
      },
      "interval": {
        "Type": "Int",
        "Description": "Interval in seconds at which a server is to be monitored",
        "Computed": true
      },
      "max_retries": {
        "Type": "Int",
        "Description": "Number of times the specified monitoring Method must fail sequentially before the server is declared down",
        "Computed": true
      },
      "method": {
        "Type": "String",
        "Description": "Method to be used to detect server status. One of OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, or CONNECT",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "LB Service Monitor name"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the LB Service Monitor is located"
      },
      "receive": {
        "Type": "String",
        "Description": "String to be matched in the response content",
        "Computed": true
      },
      "send": {
        "Type": "String",
        "Description": "Data to be sent",
        "Computed": true
      },
      "timeout": {
        "Type": "Int",
        "Description": "Maximum time in seconds within which a response from the server must be received",
        "Computed": true
      },
      "type": {
        "Type": "String",
        "Description": "Way in which you want to send the health check request to the server. One of http, https, tcp, icmp, or udp",
        "Computed": true
      },
      "url": {
        "Type": "String",
        "Description": "URL to be used in the server status request",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the LB Service Monitor is located"
      }
    },
    "vcd_lb_virtual_server": {
      "app_profile_id": {
        "Type": "String",
        "Description": "Application profile ID to be associated with the virtual server",
        "Computed": true
      },
      "app_rule_ids": {
        "Type": "List",
        "Description": "List of attached application rule IDs",
        "Computed": true,
        "Elem": {
          "Type": "SchemaElements",
          "ElementsType": "String"
        }
      },
      "connection_limit": {
        "Type": "Int",
        "Description": "Maximum concurrent connections that the virtual server can process",
        "Computed": true
      },
      "connection_rate_limit": {
        "Type": "Int",
        "Description": "Maximum incoming new connection requests per second",
        "Computed": true
      },
      "description": {
        "Type": "String",
        "Description": "Virtual Server description",
        "Computed": true
      },
      "edge_gateway": {
        "Type": "String",
        "Required": true,
        "Description": "Edge gateway name in which the Virtual Server is located"
      },
      "enable_acceleration": {
        "Type": "Bool",
        "Description": "Enable virtual server acceleration",
        "Computed": true
      },
      "enabled": {
        "Type": "Bool",
        "Description": "Defines if the virtual server is enabled",
        "Computed": true
      },
      "ip_address": {
        "Type": "String",
        "Description": "IP address that the load balancer listens on",
        "Computed": true
      },
      "name": {
        "Type": "String",
        "Required": true,
        "Description": "Virtual Server name for lookup"
      },
      "org": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD organization in which the Virtual Server is located"
      },
      "port": {
        "Type": "Int",
        "Description": "Port number that the load balancer listens on",
        "Computed": true
      },
      "protocol": {
        "Type": "String",
        "Description": "Protocol that the virtual server accepts",
        "Computed": true
      },
      "server_pool_id": {
        "Type": "String",
        "Description": "The server pool that the load balancer will use",
        "Computed": true
      },
      "vdc": {
        "Type": "String",
        "Optional": true,
        "Description": "vCD virtual datacenter in which the Virtual Server is located"
      }
    }
  }
}